Terminals unused in grammar

   ELSE
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: UNMATCHED_IF
    8     | SWITCH_BLOCK
    9     | BLOCK
   10     | FOR_LOOP
   11     | WHILE_LOOP
   12     | REPEAT_UNTIL_LOOP
   13     | DECLARATION
   14     | CONST_DECLARATION
   15     | ASSIGNMENT
   16     | LOGICAL_EXP SEMICOLON

   17 DECLARATION: PARAM_TYPE ID SEMICOLON

   18 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   19 PARAM_TYPE: INT_TYPE
   20           | FLOAT_TYPE
   21           | CHAR_TYPE

   22 $@3: /* empty */

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

   24 SWITCH_CASE: CASE_STMTS
   25            | CASE_STMTS DEFAULT_STMT
   26            | DEFAULT_STMT

   27 CASE_STMTS: CASE_STMT
   28           | CASE_STMTS CASE_STMT

   29 $@4: /* empty */

   30 $@5: /* empty */

   31 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON

   32 $@6: /* empty */

   33 DEFAULT_STMT: DEFAULT COLON $@6 STMTS BREAK SEMICOLON

   34 $@7: /* empty */

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

   36 $@8: /* empty */

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@8 STMTS RBRACE

   38 $@9: /* empty */

   39 $@10: /* empty */

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

   41 $@11: /* empty */

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMT RBRACE

   43 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   44 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP

   45 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   46            | REL_EXP AND LOGICAL_EXP
   47            | REL_EXP

   48 REL_EXP: EXP EQ EXP
   49        | EXP NE EXP
   50        | EXP LT EXP
   51        | EXP LE EXP
   52        | EXP GT EXP
   53        | EXP GE EXP
   54        | EXP

   55 EXP: EXP ADD TERM
   56    | EXP SUB TERM
   57    | TERM

   58 TERM: TERM MUL POWER
   59     | TERM DIV POWER
   60     | POWER

   61 POWER: FACTOR POW POWER
   62      | FACTOR

   63 FACTOR: LPAREN LOGICAL_EXP RPAREN
   64       | SUB FACTOR
   65       | NOT FACTOR
   66       | INTEGER
   67       | FLOAT
   68       | CHAR
   69       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 61
NOT (259) 65
OR (260) 45
AND (261) 46
EQ (262) 48
NE (263) 49
LT (264) 50
LE (265) 51
GT (266) 52
GE (267) 53
ASSIGN (268) 43 44
LPAREN (269) 23 35 37 40 42 63
RPAREN (270) 23 35 37 40 42 63
LBRACE (271) 6 23 35 37 40 42
RBRACE (272) 6 23 35 37 40 42
SEMICOLON (273) 16 17 18 31 33 35 40 43
COLON (274) 31 33
FOR (275) 35
WHILE (276) 37
REPEAT (277) 40
UNTIL (278) 40
IF (279) 42
ELSE (280)
SWITCH (281) 23
CASE (282) 31
BREAK (283) 31 33
DEFAULT (284) 33
SUB (285) 56 64
ADD (286) 55
DIV (287) 59
MUL (288) 58
INT_TYPE (289) 19
FLOAT_TYPE (290) 20
CHAR_TYPE (291) 21
VOID_TYPE (292)
CONST (293) 18
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 31 66
FLOAT (298) 67
CHAR (299) 68
ID (300) 17 18 23 43 44 69


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 31 33 35 37 40
BLOCK (48)
    on left: 6, on right: 9
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14 15 16, on right: 1 2 42
DECLARATION (52)
    on left: 17, on right: 13
CONST_DECLARATION (53)
    on left: 18, on right: 14
PARAM_TYPE (54)
    on left: 19 20 21, on right: 17 18
SWITCH_BLOCK (55)
    on left: 23, on right: 8
$@3 (56)
    on left: 22, on right: 23
SWITCH_CASE (57)
    on left: 24 25 26, on right: 23
CASE_STMTS (58)
    on left: 27 28, on right: 24 25 28
CASE_STMT (59)
    on left: 31, on right: 27 28
$@4 (60)
    on left: 29, on right: 31
$@5 (61)
    on left: 30, on right: 31
DEFAULT_STMT (62)
    on left: 33, on right: 25 26
$@6 (63)
    on left: 32, on right: 33
FOR_LOOP (64)
    on left: 35, on right: 10
$@7 (65)
    on left: 34, on right: 35
WHILE_LOOP (66)
    on left: 37, on right: 11
$@8 (67)
    on left: 36, on right: 37
REPEAT_UNTIL_LOOP (68)
    on left: 40, on right: 12
$@9 (69)
    on left: 38, on right: 40
$@10 (70)
    on left: 39, on right: 40
UNMATCHED_IF (71)
    on left: 42, on right: 7
$@11 (72)
    on left: 41, on right: 42
ASSIGNMENT (73)
    on left: 43, on right: 15
ASSIGNMENT_FORLOOP (74)
    on left: 44, on right: 35
LOGICAL_EXP (75)
    on left: 45 46 47, on right: 16 35 37 40 42 43 44 45 46 63
REL_EXP (76)
    on left: 48 49 50 51 52 53 54, on right: 45 46 47
EXP (77)
    on left: 55 56 57, on right: 48 49 50 51 52 53 54 55 56
TERM (78)
    on left: 58 59 60, on right: 55 56 57 58 59
POWER (79)
    on left: 61 62, on right: 58 59 60 61
FACTOR (80)
    on left: 63 64 65 66 67 68 69, on right: 61 62 64 65


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 19
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 1

   65 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    FACTOR  go to state 38


state 2

   63 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 39
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 40


state 4

   35 FOR_LOOP: FOR . LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    LPAREN  shift, and go to state 41


state 5

   37 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE $@8 STMTS RBRACE

    LPAREN  shift, and go to state 42


state 6

   40 REPEAT_UNTIL_LOOP: REPEAT . LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    LBRACE  shift, and go to state 43


state 7

   42 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMT RBRACE

    LPAREN  shift, and go to state 44


state 8

   23 SWITCH_BLOCK: SWITCH . LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    LPAREN  shift, and go to state 45


state 9

   64 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    FACTOR  go to state 46


state 10

   19 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 19 (PARAM_TYPE)


state 11

   20 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 20 (PARAM_TYPE)


state 12

   21 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 21 (PARAM_TYPE)


state 13

   18 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12

    PARAM_TYPE  go to state 47


state 14

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 15

   66 FACTOR: INTEGER .

    $default  reduce using rule 66 (FACTOR)


state 16

   67 FACTOR: FLOAT .

    $default  reduce using rule 67 (FACTOR)


state 17

   68 FACTOR: CHAR .

    $default  reduce using rule 68 (FACTOR)


state 18

   43 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   69 FACTOR: ID .

    ASSIGN  shift, and go to state 48

    $default  reduce using rule 69 (FACTOR)


state 19

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 49
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 20

    9 STMT: BLOCK .

    $default  reduce using rule 9 (STMT)


state 21

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 22

   13 STMT: DECLARATION .

    $default  reduce using rule 13 (STMT)


state 23

   14 STMT: CONST_DECLARATION .

    $default  reduce using rule 14 (STMT)


state 24

   17 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 51


state 25

    8 STMT: SWITCH_BLOCK .

    $default  reduce using rule 8 (STMT)


state 26

   10 STMT: FOR_LOOP .

    $default  reduce using rule 10 (STMT)


state 27

   11 STMT: WHILE_LOOP .

    $default  reduce using rule 11 (STMT)


state 28

   12 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 12 (STMT)


state 29

    7 STMT: UNMATCHED_IF .

    $default  reduce using rule 7 (STMT)


state 30

   15 STMT: ASSIGNMENT .

    $default  reduce using rule 15 (STMT)


state 31

   16 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 52


state 32

   45 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   46            | REL_EXP . AND LOGICAL_EXP
   47            | REL_EXP .

    OR   shift, and go to state 53
    AND  shift, and go to state 54

    $default  reduce using rule 47 (LOGICAL_EXP)


state 33

   48 REL_EXP: EXP . EQ EXP
   49        | EXP . NE EXP
   50        | EXP . LT EXP
   51        | EXP . LE EXP
   52        | EXP . GT EXP
   53        | EXP . GE EXP
   54        | EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    EQ   shift, and go to state 55
    NE   shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60
    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 54 (REL_EXP)


state 34

   57 EXP: TERM .
   58 TERM: TERM . MUL POWER
   59     | TERM . DIV POWER

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 57 (EXP)


state 35

   60 TERM: POWER .

    $default  reduce using rule 60 (TERM)


state 36

   61 POWER: FACTOR . POW POWER
   62      | FACTOR .

    POW  shift, and go to state 65

    $default  reduce using rule 62 (POWER)


state 37

   69 FACTOR: ID .

    $default  reduce using rule 69 (FACTOR)


state 38

   65 FACTOR: NOT FACTOR .

    $default  reduce using rule 65 (FACTOR)


state 39

   63 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 66


state 40

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 67
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 41

   35 FOR_LOOP: FOR LPAREN . ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    ID  shift, and go to state 68

    ASSIGNMENT_FORLOOP  go to state 69


state 42

   37 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE $@8 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 70
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 43

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE . $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    $default  reduce using rule 38 ($@9)

    $@9  go to state 71


state 44

   42 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE $@11 STMT RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 72
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 45

   23 SWITCH_BLOCK: SWITCH LPAREN . ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    ID  shift, and go to state 73


state 46

   64 FACTOR: SUB FACTOR .

    $default  reduce using rule 64 (FACTOR)


state 47

   18 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 74


state 48

   43 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 75
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 49

    0 $accept: STMTS $end .

    $default  accept


state 50

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 51

   17 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 52

   16 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 16 (STMT)


state 53

   45 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 77
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 54

   46 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 78
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 55

   48 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 79
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 56

   49 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 80
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 57

   50 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 81
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 58

   51 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 82
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 59

   52 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 83
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 60

   53 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    EXP     go to state 84
    TERM    go to state 34
    POWER   go to state 35
    FACTOR  go to state 36


state 61

   56 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    TERM    go to state 85
    POWER   go to state 35
    FACTOR  go to state 36


state 62

   55 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    TERM    go to state 86
    POWER   go to state 35
    FACTOR  go to state 36


state 63

   59 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    POWER   go to state 87
    FACTOR  go to state 36


state 64

   58 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    POWER   go to state 88
    FACTOR  go to state 36


state 65

   61 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    POWER   go to state 89
    FACTOR  go to state 36


state 66

   63 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 63 (FACTOR)


state 67

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 90
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 68

   44 ASSIGNMENT_FORLOOP: ID . ASSIGN LOGICAL_EXP

    ASSIGN  shift, and go to state 91


state 69

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    SEMICOLON  shift, and go to state 92


state 70

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE $@8 STMTS RBRACE

    RPAREN  shift, and go to state 93


state 71

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 94
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 72

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE $@11 STMT RBRACE

    RPAREN  shift, and go to state 95


state 73

   23 SWITCH_BLOCK: SWITCH LPAREN ID . RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    RPAREN  shift, and go to state 96


state 74

   18 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 75

   43 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 98


state 76

   17 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 17 (DECLARATION)


state 77

   45 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 45 (LOGICAL_EXP)


state 78

   46 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 46 (LOGICAL_EXP)


state 79

   48 REL_EXP: EXP EQ EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 48 (REL_EXP)


state 80

   49 REL_EXP: EXP NE EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 49 (REL_EXP)


state 81

   50 REL_EXP: EXP LT EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 50 (REL_EXP)


state 82

   51 REL_EXP: EXP LE EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 51 (REL_EXP)


state 83

   52 REL_EXP: EXP GT EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 52 (REL_EXP)


state 84

   53 REL_EXP: EXP GE EXP .
   55 EXP: EXP . ADD TERM
   56    | EXP . SUB TERM

    SUB  shift, and go to state 61
    ADD  shift, and go to state 62

    $default  reduce using rule 53 (REL_EXP)


state 85

   56 EXP: EXP SUB TERM .
   58 TERM: TERM . MUL POWER
   59     | TERM . DIV POWER

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 56 (EXP)


state 86

   55 EXP: EXP ADD TERM .
   58 TERM: TERM . MUL POWER
   59     | TERM . DIV POWER

    DIV  shift, and go to state 63
    MUL  shift, and go to state 64

    $default  reduce using rule 55 (EXP)


state 87

   59 TERM: TERM DIV POWER .

    $default  reduce using rule 59 (TERM)


state 88

   58 TERM: TERM MUL POWER .

    $default  reduce using rule 58 (TERM)


state 89

   61 POWER: FACTOR POW POWER .

    $default  reduce using rule 61 (POWER)


state 90

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 99


state 91

   44 ASSIGNMENT_FORLOOP: ID ASSIGN . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 100
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 92

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 101
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 93

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE $@8 STMTS RBRACE

    LBRACE  shift, and go to state 102


state 94

    1 STMTS: STMTS . STMT
   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 103
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 95

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE $@11 STMT RBRACE

    LBRACE  shift, and go to state 104


state 96

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN . LBRACE $@3 SWITCH_CASE RBRACE

    LBRACE  shift, and go to state 105


state 97

   18 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 18 (CONST_DECLARATION)


state 98

   43 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 43 (ASSIGNMENT)


state 99

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 100

   44 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP .

    $default  reduce using rule 44 (ASSIGNMENT_FORLOOP)


state 101

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    SEMICOLON  shift, and go to state 106


state 102

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . $@8 STMTS RBRACE

    $default  reduce using rule 36 ($@8)

    $@8  go to state 107


state 103

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    UNTIL  shift, and go to state 108


state 104

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . $@11 STMT RBRACE

    $default  reduce using rule 41 ($@11)

    $@11  go to state 109


state 105

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE . $@3 SWITCH_CASE RBRACE

    $default  reduce using rule 22 ($@3)

    $@3  go to state 110


state 106

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE

    ID  shift, and go to state 68

    ASSIGNMENT_FORLOOP  go to state 111


state 107

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@8 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 112
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 108

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON

    LPAREN  shift, and go to state 113


state 109

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 . STMT RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 114
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 110

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 . SWITCH_CASE RBRACE

    CASE     shift, and go to state 115
    DEFAULT  shift, and go to state 116

    SWITCH_CASE   go to state 117
    CASE_STMTS    go to state 118
    CASE_STMT     go to state 119
    DEFAULT_STMT  go to state 120


state 111

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP . RPAREN LBRACE $@7 STMTS RBRACE

    RPAREN  shift, and go to state 121


state 112

    1 STMTS: STMTS . STMT
   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@8 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 122
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 113

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP $@10 RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 37

    LOGICAL_EXP  go to state 123
    REL_EXP      go to state 32
    EXP          go to state 33
    TERM         go to state 34
    POWER        go to state 35
    FACTOR       go to state 36


state 114

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMT . RBRACE

    RBRACE  shift, and go to state 124


state 115

   31 CASE_STMT: CASE . INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON

    INTEGER  shift, and go to state 125


state 116

   33 DEFAULT_STMT: DEFAULT . COLON $@6 STMTS BREAK SEMICOLON

    COLON  shift, and go to state 126


state 117

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE . RBRACE

    RBRACE  shift, and go to state 127


state 118

   24 SWITCH_CASE: CASE_STMTS .
   25            | CASE_STMTS . DEFAULT_STMT
   28 CASE_STMTS: CASE_STMTS . CASE_STMT

    CASE     shift, and go to state 115
    DEFAULT  shift, and go to state 116

    $default  reduce using rule 24 (SWITCH_CASE)

    CASE_STMT     go to state 128
    DEFAULT_STMT  go to state 129


state 119

   27 CASE_STMTS: CASE_STMT .

    $default  reduce using rule 27 (CASE_STMTS)


state 120

   26 SWITCH_CASE: DEFAULT_STMT .

    $default  reduce using rule 26 (SWITCH_CASE)


state 121

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN . LBRACE $@7 STMTS RBRACE

    LBRACE  shift, and go to state 130


state 122

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@8 STMTS RBRACE .

    $default  reduce using rule 37 (WHILE_LOOP)


state 123

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . $@10 RPAREN SEMICOLON

    $default  reduce using rule 39 ($@10)

    $@10  go to state 131


state 124

   42 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMT RBRACE .

    $default  reduce using rule 42 (UNMATCHED_IF)


state 125

   31 CASE_STMT: CASE INTEGER . COLON $@4 STMTS $@5 BREAK SEMICOLON

    COLON  shift, and go to state 132


state 126

   33 DEFAULT_STMT: DEFAULT COLON . $@6 STMTS BREAK SEMICOLON

    $default  reduce using rule 32 ($@6)

    $@6  go to state 133


state 127

   23 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE .

    $default  reduce using rule 23 (SWITCH_BLOCK)


state 128

   28 CASE_STMTS: CASE_STMTS CASE_STMT .

    $default  reduce using rule 28 (CASE_STMTS)


state 129

   25 SWITCH_CASE: CASE_STMTS DEFAULT_STMT .

    $default  reduce using rule 25 (SWITCH_CASE)


state 130

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE . $@7 STMTS RBRACE

    $default  reduce using rule 34 ($@7)

    $@7  go to state 134


state 131

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 . RPAREN SEMICOLON

    RPAREN  shift, and go to state 135


state 132

   31 CASE_STMT: CASE INTEGER COLON . $@4 STMTS $@5 BREAK SEMICOLON

    $default  reduce using rule 29 ($@4)

    $@4  go to state 136


state 133

   33 DEFAULT_STMT: DEFAULT COLON $@6 . STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 137
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 134

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 138
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 135

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 139


state 136

   31 CASE_STMT: CASE INTEGER COLON $@4 . STMTS $@5 BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 140
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 137

    1 STMTS: STMTS . STMT
   33 DEFAULT_STMT: DEFAULT COLON $@6 STMTS . BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    BREAK       shift, and go to state 141
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 138

    1 STMTS: STMTS . STMT
   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 142
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 139

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@9 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@10 RPAREN SEMICOLON .

    $default  reduce using rule 40 (REPEAT_UNTIL_LOOP)


state 140

    1 STMTS: STMTS . STMT
   31 CASE_STMT: CASE INTEGER COLON $@4 STMTS . $@5 BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 30 ($@5)

    BLOCK              go to state 20
    STMT               go to state 50
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    $@5                go to state 143
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    UNMATCHED_IF       go to state 29
    ASSIGNMENT         go to state 30
    LOGICAL_EXP        go to state 31
    REL_EXP            go to state 32
    EXP                go to state 33
    TERM               go to state 34
    POWER              go to state 35
    FACTOR             go to state 36


state 141

   33 DEFAULT_STMT: DEFAULT COLON $@6 STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 142

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@7 STMTS RBRACE .

    $default  reduce using rule 35 (FOR_LOOP)


state 143

   31 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 . BREAK SEMICOLON

    BREAK  shift, and go to state 145


state 144

   33 DEFAULT_STMT: DEFAULT COLON $@6 STMTS BREAK SEMICOLON .

    $default  reduce using rule 33 (DEFAULT_STMT)


state 145

   31 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 146

   31 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON .

    $default  reduce using rule 31 (CASE_STMT)
