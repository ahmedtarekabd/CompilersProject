Terminals unused in grammar

   COLON
   ELSE
   SWITCH
   CASE
   BREAK
   DEFAULT
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: UNMATCHED_IF
    8     | BLOCK
    9     | FOR_LOOP
   10     | WHILE_LOOP
   11     | REPEAT_UNTIL_LOOP
   12     | DECLARATION
   13     | CONST_DECLARATION
   14     | ASSIGNMENT
   15     | LOGICAL_EXP SEMICOLON

   16 DECLARATION: PARAM_TYPE ID SEMICOLON

   17 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   18 PARAM_TYPE: INT_TYPE
   19           | FLOAT_TYPE
   20           | CHAR_TYPE

   21 $@3: /* empty */

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

   23 $@4: /* empty */

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

   25 $@5: /* empty */

   26 $@6: /* empty */

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

   28 $@7: /* empty */

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMT RBRACE

   30 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   31 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP

   32 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   33            | REL_EXP AND LOGICAL_EXP
   34            | REL_EXP

   35 REL_EXP: EXP EQ EXP
   36        | EXP NE EXP
   37        | EXP LT EXP
   38        | EXP LE EXP
   39        | EXP GT EXP
   40        | EXP GE EXP
   41        | EXP

   42 EXP: EXP ADD TERM
   43    | EXP SUB TERM
   44    | TERM

   45 TERM: TERM MUL POWER
   46     | TERM DIV POWER
   47     | POWER

   48 POWER: FACTOR POW POWER
   49      | FACTOR

   50 FACTOR: LPAREN LOGICAL_EXP RPAREN
   51       | SUB FACTOR
   52       | NOT FACTOR
   53       | INTEGER
   54       | FLOAT
   55       | CHAR
   56       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 48
NOT (259) 52
OR (260) 32
AND (261) 33
EQ (262) 35
NE (263) 36
LT (264) 37
LE (265) 38
GT (266) 39
GE (267) 40
ASSIGN (268) 30 31
LPAREN (269) 22 24 27 29 50
RPAREN (270) 22 24 27 29 50
LBRACE (271) 6 22 24 27 29
RBRACE (272) 6 22 24 27 29
SEMICOLON (273) 15 16 17 22 27 30
COLON (274)
FOR (275) 22
WHILE (276) 24
REPEAT (277) 27
UNTIL (278) 27
IF (279) 29
ELSE (280)
SWITCH (281)
CASE (282)
BREAK (283)
DEFAULT (284)
SUB (285) 43 51
ADD (286) 42
DIV (287) 46
MUL (288) 45
INT_TYPE (289) 18
FLOAT_TYPE (290) 19
CHAR_TYPE (291) 20
VOID_TYPE (292)
CONST (293) 17
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 53
FLOAT (298) 54
CHAR (299) 55
ID (300) 16 17 30 31 56


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 22 24 27
BLOCK (48)
    on left: 6, on right: 8
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14 15, on right: 1 2 29
DECLARATION (52)
    on left: 16, on right: 12
CONST_DECLARATION (53)
    on left: 17, on right: 13
PARAM_TYPE (54)
    on left: 18 19 20, on right: 16 17
FOR_LOOP (55)
    on left: 22, on right: 9
$@3 (56)
    on left: 21, on right: 22
WHILE_LOOP (57)
    on left: 24, on right: 10
$@4 (58)
    on left: 23, on right: 24
REPEAT_UNTIL_LOOP (59)
    on left: 27, on right: 11
$@5 (60)
    on left: 25, on right: 27
$@6 (61)
    on left: 26, on right: 27
UNMATCHED_IF (62)
    on left: 29, on right: 7
$@7 (63)
    on left: 28, on right: 29
ASSIGNMENT (64)
    on left: 30, on right: 14
ASSIGNMENT_FORLOOP (65)
    on left: 31, on right: 22
LOGICAL_EXP (66)
    on left: 32 33 34, on right: 15 22 24 27 29 30 31 32 33 50
REL_EXP (67)
    on left: 35 36 37 38 39 40 41, on right: 32 33 34
EXP (68)
    on left: 42 43 44, on right: 35 36 37 38 39 40 41 42 43
TERM (69)
    on left: 45 46 47, on right: 42 43 44 45 46
POWER (70)
    on left: 48 49, on right: 45 46 47 48
FACTOR (71)
    on left: 50 51 52 53 54 55 56, on right: 48 49 51 52


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 18
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 1

   52 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    FACTOR  go to state 36


state 2

   50 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 37
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 38


state 4

   22 FOR_LOOP: FOR . LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    LPAREN  shift, and go to state 39


state 5

   24 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

    LPAREN  shift, and go to state 40


state 6

   27 REPEAT_UNTIL_LOOP: REPEAT . LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    LBRACE  shift, and go to state 41


state 7

   29 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMT RBRACE

    LPAREN  shift, and go to state 42


state 8

   51 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    FACTOR  go to state 43


state 9

   18 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 18 (PARAM_TYPE)


state 10

   19 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 19 (PARAM_TYPE)


state 11

   20 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 20 (PARAM_TYPE)


state 12

   17 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11

    PARAM_TYPE  go to state 44


state 13

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 14

   53 FACTOR: INTEGER .

    $default  reduce using rule 53 (FACTOR)


state 15

   54 FACTOR: FLOAT .

    $default  reduce using rule 54 (FACTOR)


state 16

   55 FACTOR: CHAR .

    $default  reduce using rule 55 (FACTOR)


state 17

   30 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   56 FACTOR: ID .

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 56 (FACTOR)


state 18

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 46
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 19

    8 STMT: BLOCK .

    $default  reduce using rule 8 (STMT)


state 20

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 21

   12 STMT: DECLARATION .

    $default  reduce using rule 12 (STMT)


state 22

   13 STMT: CONST_DECLARATION .

    $default  reduce using rule 13 (STMT)


state 23

   16 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 48


state 24

    9 STMT: FOR_LOOP .

    $default  reduce using rule 9 (STMT)


state 25

   10 STMT: WHILE_LOOP .

    $default  reduce using rule 10 (STMT)


state 26

   11 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 11 (STMT)


state 27

    7 STMT: UNMATCHED_IF .

    $default  reduce using rule 7 (STMT)


state 28

   14 STMT: ASSIGNMENT .

    $default  reduce using rule 14 (STMT)


state 29

   15 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 49


state 30

   32 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   33            | REL_EXP . AND LOGICAL_EXP
   34            | REL_EXP .

    OR   shift, and go to state 50
    AND  shift, and go to state 51

    $default  reduce using rule 34 (LOGICAL_EXP)


state 31

   35 REL_EXP: EXP . EQ EXP
   36        | EXP . NE EXP
   37        | EXP . LT EXP
   38        | EXP . LE EXP
   39        | EXP . GT EXP
   40        | EXP . GE EXP
   41        | EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    EQ   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    LE   shift, and go to state 55
    GT   shift, and go to state 56
    GE   shift, and go to state 57
    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 41 (REL_EXP)


state 32

   44 EXP: TERM .
   45 TERM: TERM . MUL POWER
   46     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 44 (EXP)


state 33

   47 TERM: POWER .

    $default  reduce using rule 47 (TERM)


state 34

   48 POWER: FACTOR . POW POWER
   49      | FACTOR .

    POW  shift, and go to state 62

    $default  reduce using rule 49 (POWER)


state 35

   56 FACTOR: ID .

    $default  reduce using rule 56 (FACTOR)


state 36

   52 FACTOR: NOT FACTOR .

    $default  reduce using rule 52 (FACTOR)


state 37

   50 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 63


state 38

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 64
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 39

   22 FOR_LOOP: FOR LPAREN . ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT_FORLOOP  go to state 66


state 40

   24 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 67
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 41

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE . $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    $default  reduce using rule 25 ($@5)

    $@5  go to state 68


state 42

   29 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE $@7 STMT RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 69
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 43

   51 FACTOR: SUB FACTOR .

    $default  reduce using rule 51 (FACTOR)


state 44

   17 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 70


state 45

   30 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 71
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 46

    0 $accept: STMTS $end .

    $default  accept


state 47

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 48

   16 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 72


state 49

   15 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 15 (STMT)


state 50

   32 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 73
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 51

   33 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 74
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 52

   35 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 75
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 53

   36 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 76
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 54

   37 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 77
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 55

   38 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 78
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 56

   39 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 79
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 57

   40 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    EXP     go to state 80
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 58

   43 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    TERM    go to state 81
    POWER   go to state 33
    FACTOR  go to state 34


state 59

   42 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    TERM    go to state 82
    POWER   go to state 33
    FACTOR  go to state 34


state 60

   46 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    POWER   go to state 83
    FACTOR  go to state 34


state 61

   45 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    POWER   go to state 84
    FACTOR  go to state 34


state 62

   48 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    POWER   go to state 85
    FACTOR  go to state 34


state 63

   50 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 50 (FACTOR)


state 64

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 86
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 65

   31 ASSIGNMENT_FORLOOP: ID . ASSIGN LOGICAL_EXP

    ASSIGN  shift, and go to state 87


state 66

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 88


state 67

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE $@4 STMTS RBRACE

    RPAREN  shift, and go to state 89


state 68

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 90
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 69

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE $@7 STMT RBRACE

    RPAREN  shift, and go to state 91


state 70

   17 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 92


state 71

   30 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 93


state 72

   16 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 16 (DECLARATION)


state 73

   32 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 32 (LOGICAL_EXP)


state 74

   33 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 33 (LOGICAL_EXP)


state 75

   35 REL_EXP: EXP EQ EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 35 (REL_EXP)


state 76

   36 REL_EXP: EXP NE EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 36 (REL_EXP)


state 77

   37 REL_EXP: EXP LT EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 37 (REL_EXP)


state 78

   38 REL_EXP: EXP LE EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 38 (REL_EXP)


state 79

   39 REL_EXP: EXP GT EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 39 (REL_EXP)


state 80

   40 REL_EXP: EXP GE EXP .
   42 EXP: EXP . ADD TERM
   43    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 40 (REL_EXP)


state 81

   43 EXP: EXP SUB TERM .
   45 TERM: TERM . MUL POWER
   46     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 43 (EXP)


state 82

   42 EXP: EXP ADD TERM .
   45 TERM: TERM . MUL POWER
   46     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 42 (EXP)


state 83

   46 TERM: TERM DIV POWER .

    $default  reduce using rule 46 (TERM)


state 84

   45 TERM: TERM MUL POWER .

    $default  reduce using rule 45 (TERM)


state 85

   48 POWER: FACTOR POW POWER .

    $default  reduce using rule 48 (POWER)


state 86

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 94


state 87

   31 ASSIGNMENT_FORLOOP: ID ASSIGN . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 95
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 88

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 96
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 89

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE $@4 STMTS RBRACE

    LBRACE  shift, and go to state 97


state 90

    1 STMTS: STMTS . STMT
   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 98
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 91

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE $@7 STMT RBRACE

    LBRACE  shift, and go to state 99


state 92

   17 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 17 (CONST_DECLARATION)


state 93

   30 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 30 (ASSIGNMENT)


state 94

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 95

   31 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP .

    $default  reduce using rule 31 (ASSIGNMENT_FORLOOP)


state 96

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 100


state 97

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . $@4 STMTS RBRACE

    $default  reduce using rule 23 ($@4)

    $@4  go to state 101


state 98

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    UNTIL  shift, and go to state 102


state 99

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . $@7 STMT RBRACE

    $default  reduce using rule 28 ($@7)

    $@7  go to state 103


state 100

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT_FORLOOP  go to state 104


state 101

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 105
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 102

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    LPAREN  shift, and go to state 106


state 103

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@7 . STMT RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 107
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 104

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP . RPAREN LBRACE $@3 STMTS RBRACE

    RPAREN  shift, and go to state 108


state 105

    1 STMTS: STMTS . STMT
   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 109
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 106

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 35

    LOGICAL_EXP  go to state 110
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 107

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMT . RBRACE

    RBRACE  shift, and go to state 111


state 108

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN . LBRACE $@3 STMTS RBRACE

    LBRACE  shift, and go to state 112


state 109

   24 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE .

    $default  reduce using rule 24 (WHILE_LOOP)


state 110

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . $@6 RPAREN SEMICOLON

    $default  reduce using rule 26 ($@6)

    $@6  go to state 113


state 111

   29 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMT RBRACE .

    $default  reduce using rule 29 (UNMATCHED_IF)


state 112

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE . $@3 STMTS RBRACE

    $default  reduce using rule 21 ($@3)

    $@3  go to state 114


state 113

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 . RPAREN SEMICOLON

    RPAREN  shift, and go to state 115


state 114

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 116
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 115

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 117


state 116

    1 STMTS: STMTS . STMT
   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 118
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    CONST       shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    FOR_LOOP           go to state 24
    WHILE_LOOP         go to state 25
    REPEAT_UNTIL_LOOP  go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 117

   27 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON .

    $default  reduce using rule 27 (REPEAT_UNTIL_LOOP)


state 118

   22 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE .

    $default  reduce using rule 22 (FOR_LOOP)
