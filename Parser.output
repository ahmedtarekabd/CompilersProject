Terminals unused in grammar

   IF
   ELSE
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: SWITCH_CASE
    8     | FOR_LOOP
    9     | WHILE_LOOP
   10     | REPEAT_UNTIL_LOOP
   11     | BLOCK
   12     | DECLARATION
   13     | CONST_DECLARATION
   14     | ASSIGNMENT
   15     | LOGICAL_EXP SEMICOLON

   16 DECLARATION: PARAM_TYPE ID SEMICOLON

   17 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   18 PARAM_TYPE: INT_TYPE
   19           | FLOAT_TYPE
   20           | CHAR_TYPE

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

   22 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON
   23             | /* empty */

   24 CASES: CASES CASE_BLOCK
   25      | CASE_BLOCK

   26 CASE_BLOCK: CASE INTEGER_VALUE COLON CASE_STMTS BREAK SEMICOLON

   27 CASE_STMTS: STMTS
   28           | /* empty */

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

   32 ASSIGNMENT: ID ASSIGN EXP SEMICOLON

   33 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   34            | REL_EXP AND LOGICAL_EXP
   35            | REL_EXP

   36 REL_EXP: EXP EQ EXP
   37        | EXP NE EXP
   38        | EXP LT EXP
   39        | EXP LE EXP
   40        | EXP GT EXP
   41        | EXP GE EXP
   42        | EXP

   43 EXP: EXP ADD TERM
   44    | EXP SUB TERM
   45    | TERM

   46 TERM: TERM MUL POWER
   47     | TERM DIV POWER
   48     | POWER

   49 POWER: FACTOR POW POWER
   50      | FACTOR

   51 FACTOR: LPAREN LOGICAL_EXP RPAREN
   52       | SUB FACTOR
   53       | NOT FACTOR
   54       | INTEGER_VALUE
   55       | FLOAT_VALUE
   56       | CHAR_VALUE
   57       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 49
NOT (259) 53
OR (260) 33
AND (261) 34
EQ (262) 36
NE (263) 37
LT (264) 38
LE (265) 39
GT (266) 40
GE (267) 41
ASSIGN (268) 32
LPAREN (269) 21 29 30 31 51
RPAREN (270) 21 29 30 31 51
LBRACE (271) 6 21 29 30 31
RBRACE (272) 6 21 29 30 31
SEMICOLON (273) 15 16 17 22 26 29 31 32
COLON (274) 22 26
FOR (275) 29
WHILE (276) 30
REPEAT (277) 31
UNTIL (278) 31
IF (279)
ELSE (280)
SWITCH (281) 21
CASE (282) 26
BREAK (283) 22 26
DEFAULT (284) 22
SUB (285) 44 52
ADD (286) 43
DIV (287) 47
MUL (288) 46
INT_TYPE (289) 18
FLOAT_TYPE (290) 19
CHAR_TYPE (291) 20
VOID_TYPE (292)
CONST (293) 17
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER_VALUE (297) 26 54
FLOAT_VALUE (298) 55
CHAR_VALUE (299) 56
ID (300) 16 17 21 32 57


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 22 27 29 30 31
BLOCK (48)
    on left: 6, on right: 11
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14 15, on right: 1 2
DECLARATION (52)
    on left: 16, on right: 12
CONST_DECLARATION (53)
    on left: 17, on right: 13
PARAM_TYPE (54)
    on left: 18 19 20, on right: 16 17
SWITCH_CASE (55)
    on left: 21, on right: 7
CASE_DEFAULT (56)
    on left: 22 23, on right: 21
CASES (57)
    on left: 24 25, on right: 21 24
CASE_BLOCK (58)
    on left: 26, on right: 24 25
CASE_STMTS (59)
    on left: 27 28, on right: 26
FOR_LOOP (60)
    on left: 29, on right: 8
WHILE_LOOP (61)
    on left: 30, on right: 9
REPEAT_UNTIL_LOOP (62)
    on left: 31, on right: 10
ASSIGNMENT (63)
    on left: 32, on right: 14 29
LOGICAL_EXP (64)
    on left: 33 34 35, on right: 15 29 30 31 33 34 51
REL_EXP (65)
    on left: 36 37 38 39 40 41 42, on right: 33 34 35
EXP (66)
    on left: 43 44 45, on right: 32 36 37 38 39 40 41 42 43 44
TERM (67)
    on left: 46 47 48, on right: 43 44 45 46 47
POWER (68)
    on left: 49 50, on right: 46 47 48 49
FACTOR (69)
    on left: 51 52 53 54 55 56 57, on right: 49 50 52 53


state 0

    0 $accept: . STMTS $end

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 18
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 1

   53 FACTOR: NOT . FACTOR

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    FACTOR  go to state 36


state 2

   51 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 37
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 38


state 4

   29 FOR_LOOP: FOR . LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 39


state 5

   30 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 40


state 6

   31 REPEAT_UNTIL_LOOP: REPEAT . LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LBRACE  shift, and go to state 41


state 7

   21 SWITCH_CASE: SWITCH . LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    LPAREN  shift, and go to state 42


state 8

   52 FACTOR: SUB . FACTOR

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    FACTOR  go to state 43


state 9

   18 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 18 (PARAM_TYPE)


state 10

   19 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 19 (PARAM_TYPE)


state 11

   20 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 20 (PARAM_TYPE)


state 12

   17 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11

    PARAM_TYPE  go to state 44


state 13

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 14

   54 FACTOR: INTEGER_VALUE .

    $default  reduce using rule 54 (FACTOR)


state 15

   55 FACTOR: FLOAT_VALUE .

    $default  reduce using rule 55 (FACTOR)


state 16

   56 FACTOR: CHAR_VALUE .

    $default  reduce using rule 56 (FACTOR)


state 17

   32 ASSIGNMENT: ID . ASSIGN EXP SEMICOLON
   57 FACTOR: ID .

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 57 (FACTOR)


state 18

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end           shift, and go to state 46
    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 19

   11 STMT: BLOCK .

    $default  reduce using rule 11 (STMT)


state 20

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 21

   12 STMT: DECLARATION .

    $default  reduce using rule 12 (STMT)


state 22

   13 STMT: CONST_DECLARATION .

    $default  reduce using rule 13 (STMT)


state 23

   16 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 48


state 24

    7 STMT: SWITCH_CASE .

    $default  reduce using rule 7 (STMT)


state 25

    8 STMT: FOR_LOOP .

    $default  reduce using rule 8 (STMT)


state 26

    9 STMT: WHILE_LOOP .

    $default  reduce using rule 9 (STMT)


state 27

   10 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 10 (STMT)


state 28

   14 STMT: ASSIGNMENT .

    $default  reduce using rule 14 (STMT)


state 29

   15 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 49


state 30

   33 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   34            | REL_EXP . AND LOGICAL_EXP
   35            | REL_EXP .

    OR   shift, and go to state 50
    AND  shift, and go to state 51

    $default  reduce using rule 35 (LOGICAL_EXP)


state 31

   36 REL_EXP: EXP . EQ EXP
   37        | EXP . NE EXP
   38        | EXP . LT EXP
   39        | EXP . LE EXP
   40        | EXP . GT EXP
   41        | EXP . GE EXP
   42        | EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    EQ   shift, and go to state 52
    NE   shift, and go to state 53
    LT   shift, and go to state 54
    LE   shift, and go to state 55
    GT   shift, and go to state 56
    GE   shift, and go to state 57
    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 42 (REL_EXP)


state 32

   45 EXP: TERM .
   46 TERM: TERM . MUL POWER
   47     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 45 (EXP)


state 33

   48 TERM: POWER .

    $default  reduce using rule 48 (TERM)


state 34

   49 POWER: FACTOR . POW POWER
   50      | FACTOR .

    POW  shift, and go to state 62

    $default  reduce using rule 50 (POWER)


state 35

   57 FACTOR: ID .

    $default  reduce using rule 57 (FACTOR)


state 36

   53 FACTOR: NOT FACTOR .

    $default  reduce using rule 53 (FACTOR)


state 37

   51 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 63


state 38

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 64
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 39

   29 FOR_LOOP: FOR LPAREN . ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT  go to state 66


state 40

   30 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 67
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 41

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 68
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 42

   21 SWITCH_CASE: SWITCH LPAREN . ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    ID  shift, and go to state 69


state 43

   52 FACTOR: SUB FACTOR .

    $default  reduce using rule 52 (FACTOR)


state 44

   17 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 70


state 45

   32 ASSIGNMENT: ID ASSIGN . EXP SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 71
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 46

    0 $accept: STMTS $end .

    $default  accept


state 47

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 48

   16 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 72


state 49

   15 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 15 (STMT)


state 50

   33 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 73
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 51

   34 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 74
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 52

   36 REL_EXP: EXP EQ . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 75
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 53

   37 REL_EXP: EXP NE . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 76
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 54

   38 REL_EXP: EXP LT . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 77
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 55

   39 REL_EXP: EXP LE . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 78
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 56

   40 REL_EXP: EXP GT . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 79
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 57

   41 REL_EXP: EXP GE . EXP

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    EXP     go to state 80
    TERM    go to state 32
    POWER   go to state 33
    FACTOR  go to state 34


state 58

   44 EXP: EXP SUB . TERM

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    TERM    go to state 81
    POWER   go to state 33
    FACTOR  go to state 34


state 59

   43 EXP: EXP ADD . TERM

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    TERM    go to state 82
    POWER   go to state 33
    FACTOR  go to state 34


state 60

   47 TERM: TERM DIV . POWER

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    POWER   go to state 83
    FACTOR  go to state 34


state 61

   46 TERM: TERM MUL . POWER

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    POWER   go to state 84
    FACTOR  go to state 34


state 62

   49 POWER: FACTOR POW . POWER

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    POWER   go to state 85
    FACTOR  go to state 34


state 63

   51 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 51 (FACTOR)


state 64

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    RBRACE         shift, and go to state 86
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 65

   32 ASSIGNMENT: ID . ASSIGN EXP SEMICOLON

    ASSIGN  shift, and go to state 45


state 66

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 87


state 67

   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 88


state 68

    1 STMTS: STMTS . STMT
   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    RBRACE         shift, and go to state 89
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 69

   21 SWITCH_CASE: SWITCH LPAREN ID . RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    RPAREN  shift, and go to state 90


state 70

   17 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 91


state 71

   32 ASSIGNMENT: ID ASSIGN EXP . SEMICOLON
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SEMICOLON  shift, and go to state 92
    SUB        shift, and go to state 58
    ADD        shift, and go to state 59


state 72

   16 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 16 (DECLARATION)


state 73

   33 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 33 (LOGICAL_EXP)


state 74

   34 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 34 (LOGICAL_EXP)


state 75

   36 REL_EXP: EXP EQ EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 36 (REL_EXP)


state 76

   37 REL_EXP: EXP NE EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 37 (REL_EXP)


state 77

   38 REL_EXP: EXP LT EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 38 (REL_EXP)


state 78

   39 REL_EXP: EXP LE EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 39 (REL_EXP)


state 79

   40 REL_EXP: EXP GT EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 40 (REL_EXP)


state 80

   41 REL_EXP: EXP GE EXP .
   43 EXP: EXP . ADD TERM
   44    | EXP . SUB TERM

    SUB  shift, and go to state 58
    ADD  shift, and go to state 59

    $default  reduce using rule 41 (REL_EXP)


state 81

   44 EXP: EXP SUB TERM .
   46 TERM: TERM . MUL POWER
   47     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 44 (EXP)


state 82

   43 EXP: EXP ADD TERM .
   46 TERM: TERM . MUL POWER
   47     | TERM . DIV POWER

    DIV  shift, and go to state 60
    MUL  shift, and go to state 61

    $default  reduce using rule 43 (EXP)


state 83

   47 TERM: TERM DIV POWER .

    $default  reduce using rule 47 (TERM)


state 84

   46 TERM: TERM MUL POWER .

    $default  reduce using rule 46 (TERM)


state 85

   49 POWER: FACTOR POW POWER .

    $default  reduce using rule 49 (POWER)


state 86

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 93


state 87

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 94
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 88

   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 95


state 89

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    UNTIL  shift, and go to state 96


state 90

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN . LBRACE CASES CASE_DEFAULT RBRACE

    LBRACE  shift, and go to state 97


state 91

   17 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 17 (CONST_DECLARATION)


state 92

   32 ASSIGNMENT: ID ASSIGN EXP SEMICOLON .

    $default  reduce using rule 32 (ASSIGNMENT)


state 93

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 94

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 98


state 95

   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . STMTS RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 99
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 96

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LPAREN  shift, and go to state 100


state 97

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE . CASES CASE_DEFAULT RBRACE

    CASE  shift, and go to state 101

    CASES       go to state 102
    CASE_BLOCK  go to state 103


state 98

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT  go to state 104


state 99

    1 STMTS: STMTS . STMT
   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS . RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    RBRACE         shift, and go to state 105
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 100

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP RPAREN SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    SUB            shift, and go to state 8
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 35

    LOGICAL_EXP  go to state 106
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    POWER        go to state 33
    FACTOR       go to state 34


state 101

   26 CASE_BLOCK: CASE . INTEGER_VALUE COLON CASE_STMTS BREAK SEMICOLON

    INTEGER_VALUE  shift, and go to state 107


state 102

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES . CASE_DEFAULT RBRACE
   24 CASES: CASES . CASE_BLOCK

    CASE     shift, and go to state 101
    DEFAULT  shift, and go to state 108

    $default  reduce using rule 23 (CASE_DEFAULT)

    CASE_DEFAULT  go to state 109
    CASE_BLOCK    go to state 110


state 103

   25 CASES: CASE_BLOCK .

    $default  reduce using rule 25 (CASES)


state 104

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 111


state 105

   30 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 30 (WHILE_LOOP)


state 106

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . RPAREN SEMICOLON

    RPAREN  shift, and go to state 112


state 107

   26 CASE_BLOCK: CASE INTEGER_VALUE . COLON CASE_STMTS BREAK SEMICOLON

    COLON  shift, and go to state 113


state 108

   22 CASE_DEFAULT: DEFAULT . COLON STMTS BREAK SEMICOLON

    COLON  shift, and go to state 114


state 109

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT . RBRACE

    RBRACE  shift, and go to state 115


state 110

   24 CASES: CASES CASE_BLOCK .

    $default  reduce using rule 24 (CASES)


state 111

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 116


state 112

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 117


state 113

   26 CASE_BLOCK: CASE INTEGER_VALUE COLON . CASE_STMTS BREAK SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    $default  reduce using rule 28 (CASE_STMTS)

    STMTS              go to state 118
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    CASE_STMTS         go to state 119
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 114

   22 CASE_DEFAULT: DEFAULT COLON . STMTS BREAK SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 120
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 115

   21 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE .

    $default  reduce using rule 21 (SWITCH_CASE)


state 116

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE . STMTS RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    ERROR          shift, and go to state 13
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    STMTS              go to state 121
    BLOCK              go to state 19
    STMT               go to state 20
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 117

   31 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON .

    $default  reduce using rule 31 (REPEAT_UNTIL_LOOP)


state 118

    1 STMTS: STMTS . STMT
   27 CASE_STMTS: STMTS .

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    $default  reduce using rule 27 (CASE_STMTS)

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 119

   26 CASE_BLOCK: CASE INTEGER_VALUE COLON CASE_STMTS . BREAK SEMICOLON

    BREAK  shift, and go to state 122


state 120

    1 STMTS: STMTS . STMT
   22 CASE_DEFAULT: DEFAULT COLON STMTS . BREAK SEMICOLON

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    BREAK          shift, and go to state 123
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 121

    1 STMTS: STMTS . STMT
   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS . RBRACE

    NOT            shift, and go to state 1
    LPAREN         shift, and go to state 2
    LBRACE         shift, and go to state 3
    RBRACE         shift, and go to state 124
    FOR            shift, and go to state 4
    WHILE          shift, and go to state 5
    REPEAT         shift, and go to state 6
    SWITCH         shift, and go to state 7
    SUB            shift, and go to state 8
    INT_TYPE       shift, and go to state 9
    FLOAT_TYPE     shift, and go to state 10
    CHAR_TYPE      shift, and go to state 11
    CONST          shift, and go to state 12
    INTEGER_VALUE  shift, and go to state 14
    FLOAT_VALUE    shift, and go to state 15
    CHAR_VALUE     shift, and go to state 16
    ID             shift, and go to state 17

    BLOCK              go to state 19
    STMT               go to state 47
    DECLARATION        go to state 21
    CONST_DECLARATION  go to state 22
    PARAM_TYPE         go to state 23
    SWITCH_CASE        go to state 24
    FOR_LOOP           go to state 25
    WHILE_LOOP         go to state 26
    REPEAT_UNTIL_LOOP  go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    POWER              go to state 33
    FACTOR             go to state 34


state 122

   26 CASE_BLOCK: CASE INTEGER_VALUE COLON CASE_STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 123

   22 CASE_DEFAULT: DEFAULT COLON STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 124

   29 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 29 (FOR_LOOP)


state 125

   26 CASE_BLOCK: CASE INTEGER_VALUE COLON CASE_STMTS BREAK SEMICOLON .

    $default  reduce using rule 26 (CASE_BLOCK)


state 126

   22 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON .

    $default  reduce using rule 22 (CASE_DEFAULT)
