Terminals unused in grammar

   VOID_TYPE
   RETURN
   COMMA


State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: MATCHED_IF
    8     | UNMATCHED_IF
    9     | SWITCH_CASE
   10     | FOR_LOOP
   11     | WHILE_LOOP
   12     | REPEAT_UNTIL_LOOP
   13     | BLOCK
   14     | DECLARATION
   15     | CONST_DECLARATION
   16     | ASSIGNMENT
   17     | LOGICAL_EXP SEMICOLON

   18 DECLARATION: PARAM_TYPE ID SEMICOLON

   19 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   20 PARAM_TYPE: INT_TYPE
   21           | FLOAT_TYPE
   22           | CHAR_TYPE

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

   24 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON
   25             | /* empty */

   26 CASES: CASES CASE_BLOCK
   27      | CASE_BLOCK

   28 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON

   29 CASE_STMTS: STMTS
   30           | /* empty */

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE

   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   37             | IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

   38 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   39 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   40            | REL_EXP AND LOGICAL_EXP
   41            | REL_EXP

   42 REL_EXP: EXP EQ EXP
   43        | EXP NE EXP
   44        | EXP LT EXP
   45        | EXP LE EXP
   46        | EXP GT EXP
   47        | EXP GE EXP
   48        | EXP

   49 EXP: EXP ADD TERM
   50    | EXP SUB TERM
   51    | TERM

   52 TERM: TERM MUL POWER
   53     | TERM DIV POWER
   54     | POWER

   55 POWER: FACTOR POW POWER
   56      | FACTOR

   57 FACTOR: LPAREN LOGICAL_EXP RPAREN
   58       | SUB FACTOR
   59       | NOT FACTOR
   60       | INTEGER
   61       | FLOAT
   62       | CHAR
   63       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 55
NOT (259) 59
OR (260) 39
AND (261) 40
EQ (262) 42
NE (263) 43
LT (264) 44
LE (265) 45
GT (266) 46
GE (267) 47
ASSIGN (268) 38
LPAREN (269) 23 31 32 33 34 35 36 37 57
RPAREN (270) 23 31 32 33 34 35 36 37 57
LBRACE (271) 6 23 31 32 33 34 35 36 37
RBRACE (272) 6 23 31 32 33 34 35 36 37
SEMICOLON (273) 17 18 19 24 28 31 33 38
COLON (274) 24 28
FOR (275) 31
WHILE (276) 32
REPEAT (277) 33
UNTIL (278) 33
IF (279) 34 35 36 37
ELSE (280) 34 35 37
SWITCH (281) 23
CASE (282) 28
BREAK (283) 24 28
DEFAULT (284) 24
SUB (285) 50 58
ADD (286) 49
DIV (287) 53
MUL (288) 52
INT_TYPE (289) 20
FLOAT_TYPE (290) 21
CHAR_TYPE (291) 22
VOID_TYPE (292)
CONST (293) 19
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 28 60
FLOAT (298) 61
CHAR (299) 62
ID (300) 18 19 23 38 63


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 24 29 31 32 33
BLOCK (48)
    on left: 6, on right: 13
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 1 2 35 36
DECLARATION (52)
    on left: 18, on right: 14
CONST_DECLARATION (53)
    on left: 19, on right: 15
PARAM_TYPE (54)
    on left: 20 21 22, on right: 18 19
SWITCH_CASE (55)
    on left: 23, on right: 9
CASE_DEFAULT (56)
    on left: 24 25, on right: 23
CASES (57)
    on left: 26 27, on right: 23 26
CASE_BLOCK (58)
    on left: 28, on right: 26 27
CASE_STMTS (59)
    on left: 29 30, on right: 28
FOR_LOOP (60)
    on left: 31, on right: 10
WHILE_LOOP (61)
    on left: 32, on right: 11
REPEAT_UNTIL_LOOP (62)
    on left: 33, on right: 12
MATCHED_IF (63)
    on left: 34 35, on right: 7 34 37
UNMATCHED_IF (64)
    on left: 36 37, on right: 8 37
ASSIGNMENT (65)
    on left: 38, on right: 16 31
LOGICAL_EXP (66)
    on left: 39 40 41, on right: 17 31 32 33 34 35 36 37 38 39 40 57
REL_EXP (67)
    on left: 42 43 44 45 46 47 48, on right: 39 40 41
EXP (68)
    on left: 49 50 51, on right: 42 43 44 45 46 47 48 49 50
TERM (69)
    on left: 52 53 54, on right: 49 50 51 52 53
POWER (70)
    on left: 55 56, on right: 52 53 54 55
FACTOR (71)
    on left: 57 58 59 60 61 62 63, on right: 55 56 58 59


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 19
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 1

   59 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    FACTOR  go to state 39


state 2

   57 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 40
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 41


state 4

   31 FOR_LOOP: FOR . LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 42


state 5

   32 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 43


state 6

   33 REPEAT_UNTIL_LOOP: REPEAT . LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LBRACE  shift, and go to state 44


state 7

   34 MATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   37             | IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LPAREN  shift, and go to state 45


state 8

   23 SWITCH_CASE: SWITCH . LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    LPAREN  shift, and go to state 46


state 9

   58 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    FACTOR  go to state 47


state 10

   20 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 20 (PARAM_TYPE)


state 11

   21 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 21 (PARAM_TYPE)


state 12

   22 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 22 (PARAM_TYPE)


state 13

   19 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12

    PARAM_TYPE  go to state 48


state 14

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 15

   60 FACTOR: INTEGER .

    $default  reduce using rule 60 (FACTOR)


state 16

   61 FACTOR: FLOAT .

    $default  reduce using rule 61 (FACTOR)


state 17

   62 FACTOR: CHAR .

    $default  reduce using rule 62 (FACTOR)


state 18

   38 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   63 FACTOR: ID .

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 63 (FACTOR)


state 19

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 50
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 20

   13 STMT: BLOCK .

    $default  reduce using rule 13 (STMT)


state 21

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 22

   14 STMT: DECLARATION .

    $default  reduce using rule 14 (STMT)


state 23

   15 STMT: CONST_DECLARATION .

    $default  reduce using rule 15 (STMT)


state 24

   18 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 52


state 25

    9 STMT: SWITCH_CASE .

    $default  reduce using rule 9 (STMT)


state 26

   10 STMT: FOR_LOOP .

    $default  reduce using rule 10 (STMT)


state 27

   11 STMT: WHILE_LOOP .

    $default  reduce using rule 11 (STMT)


state 28

   12 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 12 (STMT)


state 29

    7 STMT: MATCHED_IF .

    $default  reduce using rule 7 (STMT)


state 30

    8 STMT: UNMATCHED_IF .

    $default  reduce using rule 8 (STMT)


state 31

   16 STMT: ASSIGNMENT .

    $default  reduce using rule 16 (STMT)


state 32

   17 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 33

   39 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   40            | REL_EXP . AND LOGICAL_EXP
   41            | REL_EXP .

    OR   shift, and go to state 54
    AND  shift, and go to state 55

    $default  reduce using rule 41 (LOGICAL_EXP)


state 34

   42 REL_EXP: EXP . EQ EXP
   43        | EXP . NE EXP
   44        | EXP . LT EXP
   45        | EXP . LE EXP
   46        | EXP . GT EXP
   47        | EXP . GE EXP
   48        | EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    LT   shift, and go to state 58
    LE   shift, and go to state 59
    GT   shift, and go to state 60
    GE   shift, and go to state 61
    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 48 (REL_EXP)


state 35

   51 EXP: TERM .
   52 TERM: TERM . MUL POWER
   53     | TERM . DIV POWER

    DIV  shift, and go to state 64
    MUL  shift, and go to state 65

    $default  reduce using rule 51 (EXP)


state 36

   54 TERM: POWER .

    $default  reduce using rule 54 (TERM)


state 37

   55 POWER: FACTOR . POW POWER
   56      | FACTOR .

    POW  shift, and go to state 66

    $default  reduce using rule 56 (POWER)


state 38

   63 FACTOR: ID .

    $default  reduce using rule 63 (FACTOR)


state 39

   59 FACTOR: NOT FACTOR .

    $default  reduce using rule 59 (FACTOR)


state 40

   57 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 67


state 41

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 68
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 42

   31 FOR_LOOP: FOR LPAREN . ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 69

    ASSIGNMENT  go to state 70


state 43

   32 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 71
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 44

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 72
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 45

   34 MATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   37             | IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 73
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 46

   23 SWITCH_CASE: SWITCH LPAREN . ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    ID  shift, and go to state 74


state 47

   58 FACTOR: SUB FACTOR .

    $default  reduce using rule 58 (FACTOR)


state 48

   19 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 75


state 49

   38 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 76
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 50

    0 $accept: STMTS $end .

    $default  accept


state 51

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 52

   18 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 77


state 53

   17 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 17 (STMT)


state 54

   39 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 78
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 55

   40 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 79
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 56

   42 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 80
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 57

   43 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 81
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 58

   44 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 82
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 59

   45 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 83
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 60

   46 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 84
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 61

   47 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 85
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 62

   50 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    TERM    go to state 86
    POWER   go to state 36
    FACTOR  go to state 37


state 63

   49 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    TERM    go to state 87
    POWER   go to state 36
    FACTOR  go to state 37


state 64

   53 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 88
    FACTOR  go to state 37


state 65

   52 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 89
    FACTOR  go to state 37


state 66

   55 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 90
    FACTOR  go to state 37


state 67

   57 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 57 (FACTOR)


state 68

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 91
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 69

   38 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON

    ASSIGN  shift, and go to state 49


state 70

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 92


state 71

   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 93


state 72

    1 STMTS: STMTS . STMT
   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 94
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 73

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE
   37             | IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RPAREN  shift, and go to state 95


state 74

   23 SWITCH_CASE: SWITCH LPAREN ID . RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    RPAREN  shift, and go to state 96


state 75

   19 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 76

   38 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 98


state 77

   18 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 18 (DECLARATION)


state 78

   39 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 39 (LOGICAL_EXP)


state 79

   40 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 40 (LOGICAL_EXP)


state 80

   42 REL_EXP: EXP EQ EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 42 (REL_EXP)


state 81

   43 REL_EXP: EXP NE EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 43 (REL_EXP)


state 82

   44 REL_EXP: EXP LT EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 44 (REL_EXP)


state 83

   45 REL_EXP: EXP LE EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 45 (REL_EXP)


state 84

   46 REL_EXP: EXP GT EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 46 (REL_EXP)


state 85

   47 REL_EXP: EXP GE EXP .
   49 EXP: EXP . ADD TERM
   50    | EXP . SUB TERM

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 47 (REL_EXP)


state 86

   50 EXP: EXP SUB TERM .
   52 TERM: TERM . MUL POWER
   53     | TERM . DIV POWER

    DIV  shift, and go to state 64
    MUL  shift, and go to state 65

    $default  reduce using rule 50 (EXP)


state 87

   49 EXP: EXP ADD TERM .
   52 TERM: TERM . MUL POWER
   53     | TERM . DIV POWER

    DIV  shift, and go to state 64
    MUL  shift, and go to state 65

    $default  reduce using rule 49 (EXP)


state 88

   53 TERM: TERM DIV POWER .

    $default  reduce using rule 53 (TERM)


state 89

   52 TERM: TERM MUL POWER .

    $default  reduce using rule 52 (TERM)


state 90

   55 POWER: FACTOR POW POWER .

    $default  reduce using rule 55 (POWER)


state 91

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 99


state 92

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 100
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 93

   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 101


state 94

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    UNTIL  shift, and go to state 102


state 95

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE
   37             | IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 103


state 96

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN . LBRACE CASES CASE_DEFAULT RBRACE

    LBRACE  shift, and go to state 104


state 97

   19 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 19 (CONST_DECLARATION)


state 98

   38 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 38 (ASSIGNMENT)


state 99

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 100

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 105


state 101

   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 106
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 102

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LPAREN  shift, and go to state 107


state 103

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   35           | IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE
   37             | IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 108
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 109
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 104

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE . CASES CASE_DEFAULT RBRACE

    CASE  shift, and go to state 110

    CASES       go to state 111
    CASE_BLOCK  go to state 112


state 105

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 69

    ASSIGNMENT  go to state 113


state 106

    1 STMTS: STMTS . STMT
   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 114
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 107

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 115
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 108

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 116


state 109

    7 STMT: MATCHED_IF .
   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE MATCHED_IF RBRACE
   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RBRACE  shift, and go to state 117

    RBRACE  [reduce using rule 7 (STMT)]


state 110

   28 CASE_BLOCK: CASE . INTEGER COLON CASE_STMTS BREAK SEMICOLON

    INTEGER  shift, and go to state 118


state 111

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES . CASE_DEFAULT RBRACE
   26 CASES: CASES . CASE_BLOCK

    CASE     shift, and go to state 110
    DEFAULT  shift, and go to state 119

    $default  reduce using rule 25 (CASE_DEFAULT)

    CASE_DEFAULT  go to state 120
    CASE_BLOCK    go to state 121


state 112

   27 CASES: CASE_BLOCK .

    $default  reduce using rule 27 (CASES)


state 113

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 122


state 114

   32 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 32 (WHILE_LOOP)


state 115

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . RPAREN SEMICOLON

    RPAREN  shift, and go to state 123


state 116

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE . ELSE LBRACE STMT RBRACE
   36 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE .

    ELSE  shift, and go to state 124

    $default  reduce using rule 36 (UNMATCHED_IF)


state 117

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE MATCHED_IF RBRACE
   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE UNMATCHED_IF RBRACE

    ELSE  shift, and go to state 125


state 118

   28 CASE_BLOCK: CASE INTEGER . COLON CASE_STMTS BREAK SEMICOLON

    COLON  shift, and go to state 126


state 119

   24 CASE_DEFAULT: DEFAULT . COLON STMTS BREAK SEMICOLON

    COLON  shift, and go to state 127


state 120

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT . RBRACE

    RBRACE  shift, and go to state 128


state 121

   26 CASES: CASES CASE_BLOCK .

    $default  reduce using rule 26 (CASES)


state 122

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 129


state 123

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 130


state 124

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE . LBRACE STMT RBRACE

    LBRACE  shift, and go to state 131


state 125

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE MATCHED_IF RBRACE
   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 132


state 126

   28 CASE_BLOCK: CASE INTEGER COLON . CASE_STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 30 (CASE_STMTS)

    STMTS              go to state 133
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    CASE_STMTS         go to state 134
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 127

   24 CASE_DEFAULT: DEFAULT COLON . STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 135
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 128

   23 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE .

    $default  reduce using rule 23 (SWITCH_CASE)


state 129

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 136
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 130

   33 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON .

    $default  reduce using rule 33 (REPEAT_UNTIL_LOOP)


state 131

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE . STMT RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 137
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 132

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . MATCHED_IF RBRACE
   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . UNMATCHED_IF RBRACE

    IF  shift, and go to state 7

    MATCHED_IF    go to state 138
    UNMATCHED_IF  go to state 139


state 133

    1 STMTS: STMTS . STMT
   29 CASE_STMTS: STMTS .

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 29 (CASE_STMTS)

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 134

   28 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS . BREAK SEMICOLON

    BREAK  shift, and go to state 140


state 135

    1 STMTS: STMTS . STMT
   24 CASE_DEFAULT: DEFAULT COLON STMTS . BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    BREAK       shift, and go to state 141
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 136

    1 STMTS: STMTS . STMT
   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 142
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_CASE        go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 137

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 143


state 138

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF . RBRACE

    RBRACE  shift, and go to state 144


state 139

   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF . RBRACE

    RBRACE  shift, and go to state 145


state 140

   28 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 141

   24 CASE_DEFAULT: DEFAULT COLON STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 142

   31 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 31 (FOR_LOOP)


state 143

   35 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE .

    $default  reduce using rule 35 (MATCHED_IF)


state 144

   34 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE .

    $default  reduce using rule 34 (MATCHED_IF)


state 145

   37 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE .

    $default  reduce using rule 37 (UNMATCHED_IF)


state 146

   28 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON .

    $default  reduce using rule 28 (CASE_BLOCK)


state 147

   24 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON .

    $default  reduce using rule 24 (CASE_DEFAULT)
