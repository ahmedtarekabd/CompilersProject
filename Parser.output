Terminals unused in grammar

   COLON
   WHILE
   REPEAT
   UNTIL
   IF
   ELSE
   SWITCH
   CASE
   BREAK
   DEFAULT
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: BLOCK
    8     | FOR_LOOP
    9     | DECLARATION
   10     | CONST_DECLARATION
   11     | ASSIGNMENT
   12     | LOGICAL_EXP SEMICOLON

   13 DECLARATION: PARAM_TYPE ID SEMICOLON

   14 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   15 PARAM_TYPE: INT_TYPE
   16           | FLOAT_TYPE
   17           | CHAR_TYPE

   18 $@3: /* empty */

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

   20 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   21 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP

   22 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   23            | REL_EXP AND LOGICAL_EXP
   24            | REL_EXP

   25 REL_EXP: EXP EQ EXP
   26        | EXP NE EXP
   27        | EXP LT EXP
   28        | EXP LE EXP
   29        | EXP GT EXP
   30        | EXP GE EXP
   31        | EXP

   32 EXP: EXP ADD TERM
   33    | EXP SUB TERM
   34    | TERM

   35 TERM: TERM MUL POWER
   36     | TERM DIV POWER
   37     | POWER

   38 POWER: FACTOR POW POWER
   39      | FACTOR

   40 FACTOR: LPAREN LOGICAL_EXP RPAREN
   41       | SUB FACTOR
   42       | NOT FACTOR
   43       | INTEGER
   44       | FLOAT
   45       | CHAR
   46       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 38
NOT (259) 42
OR (260) 22
AND (261) 23
EQ (262) 25
NE (263) 26
LT (264) 27
LE (265) 28
GT (266) 29
GE (267) 30
ASSIGN (268) 20 21
LPAREN (269) 19 40
RPAREN (270) 19 40
LBRACE (271) 6 19
RBRACE (272) 6 19
SEMICOLON (273) 12 13 14 19 20
COLON (274)
FOR (275) 19
WHILE (276)
REPEAT (277)
UNTIL (278)
IF (279)
ELSE (280)
SWITCH (281)
CASE (282)
BREAK (283)
DEFAULT (284)
SUB (285) 33 41
ADD (286) 32
DIV (287) 36
MUL (288) 35
INT_TYPE (289) 15
FLOAT_TYPE (290) 16
CHAR_TYPE (291) 17
VOID_TYPE (292)
CONST (293) 14
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 43
FLOAT (298) 44
CHAR (299) 45
ID (300) 13 14 20 21 46


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 19
BLOCK (48)
    on left: 6, on right: 7
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12, on right: 1 2
DECLARATION (52)
    on left: 13, on right: 9
CONST_DECLARATION (53)
    on left: 14, on right: 10
PARAM_TYPE (54)
    on left: 15 16 17, on right: 13 14
FOR_LOOP (55)
    on left: 19, on right: 8
$@3 (56)
    on left: 18, on right: 19
ASSIGNMENT (57)
    on left: 20, on right: 11
ASSIGNMENT_FORLOOP (58)
    on left: 21, on right: 19
LOGICAL_EXP (59)
    on left: 22 23 24, on right: 12 19 20 21 22 23 40
REL_EXP (60)
    on left: 25 26 27 28 29 30 31, on right: 22 23 24
EXP (61)
    on left: 32 33 34, on right: 25 26 27 28 29 30 31 32 33
TERM (62)
    on left: 35 36 37, on right: 32 33 34 35 36
POWER (63)
    on left: 38 39, on right: 35 36 37 38
FACTOR (64)
    on left: 40 41 42 43 44 45 46, on right: 38 39 41 42


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    ERROR       shift, and go to state 10
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    STMTS              go to state 15
    BLOCK              go to state 16
    STMT               go to state 17
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 1

   42 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    FACTOR  go to state 30


state 2

   40 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 31
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 32


state 4

   19 FOR_LOOP: FOR . LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    LPAREN  shift, and go to state 33


state 5

   41 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    FACTOR  go to state 34


state 6

   15 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 15 (PARAM_TYPE)


state 7

   16 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 16 (PARAM_TYPE)


state 8

   17 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 17 (PARAM_TYPE)


state 9

   14 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8

    PARAM_TYPE  go to state 35


state 10

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 11

   43 FACTOR: INTEGER .

    $default  reduce using rule 43 (FACTOR)


state 12

   44 FACTOR: FLOAT .

    $default  reduce using rule 44 (FACTOR)


state 13

   45 FACTOR: CHAR .

    $default  reduce using rule 45 (FACTOR)


state 14

   20 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   46 FACTOR: ID .

    ASSIGN  shift, and go to state 36

    $default  reduce using rule 46 (FACTOR)


state 15

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 37
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    BLOCK              go to state 16
    STMT               go to state 38
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 16

    7 STMT: BLOCK .

    $default  reduce using rule 7 (STMT)


state 17

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 18

    9 STMT: DECLARATION .

    $default  reduce using rule 9 (STMT)


state 19

   10 STMT: CONST_DECLARATION .

    $default  reduce using rule 10 (STMT)


state 20

   13 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 39


state 21

    8 STMT: FOR_LOOP .

    $default  reduce using rule 8 (STMT)


state 22

   11 STMT: ASSIGNMENT .

    $default  reduce using rule 11 (STMT)


state 23

   12 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 40


state 24

   22 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   23            | REL_EXP . AND LOGICAL_EXP
   24            | REL_EXP .

    OR   shift, and go to state 41
    AND  shift, and go to state 42

    $default  reduce using rule 24 (LOGICAL_EXP)


state 25

   25 REL_EXP: EXP . EQ EXP
   26        | EXP . NE EXP
   27        | EXP . LT EXP
   28        | EXP . LE EXP
   29        | EXP . GT EXP
   30        | EXP . GE EXP
   31        | EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    EQ   shift, and go to state 43
    NE   shift, and go to state 44
    LT   shift, and go to state 45
    LE   shift, and go to state 46
    GT   shift, and go to state 47
    GE   shift, and go to state 48
    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 31 (REL_EXP)


state 26

   34 EXP: TERM .
   35 TERM: TERM . MUL POWER
   36     | TERM . DIV POWER

    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 34 (EXP)


state 27

   37 TERM: POWER .

    $default  reduce using rule 37 (TERM)


state 28

   38 POWER: FACTOR . POW POWER
   39      | FACTOR .

    POW  shift, and go to state 53

    $default  reduce using rule 39 (POWER)


state 29

   46 FACTOR: ID .

    $default  reduce using rule 46 (FACTOR)


state 30

   42 FACTOR: NOT FACTOR .

    $default  reduce using rule 42 (FACTOR)


state 31

   40 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 54


state 32

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    ERROR       shift, and go to state 10
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    STMTS              go to state 55
    BLOCK              go to state 16
    STMT               go to state 17
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 33

   19 FOR_LOOP: FOR LPAREN . ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 56

    ASSIGNMENT_FORLOOP  go to state 57


state 34

   41 FACTOR: SUB FACTOR .

    $default  reduce using rule 41 (FACTOR)


state 35

   14 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 58


state 36

   20 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 59
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 37

    0 $accept: STMTS $end .

    $default  accept


state 38

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 39

   13 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 60


state 40

   12 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 12 (STMT)


state 41

   22 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 61
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 42

   23 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 62
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 43

   25 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 63
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 44

   26 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 64
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 45

   27 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 65
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 46

   28 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 66
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 47

   29 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 67
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 48

   30 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    EXP     go to state 68
    TERM    go to state 26
    POWER   go to state 27
    FACTOR  go to state 28


state 49

   33 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    TERM    go to state 69
    POWER   go to state 27
    FACTOR  go to state 28


state 50

   32 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    TERM    go to state 70
    POWER   go to state 27
    FACTOR  go to state 28


state 51

   36 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    POWER   go to state 71
    FACTOR  go to state 28


state 52

   35 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    POWER   go to state 72
    FACTOR  go to state 28


state 53

   38 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    POWER   go to state 73
    FACTOR  go to state 28


state 54

   40 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 40 (FACTOR)


state 55

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 74
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    BLOCK              go to state 16
    STMT               go to state 38
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 56

   21 ASSIGNMENT_FORLOOP: ID . ASSIGN LOGICAL_EXP

    ASSIGN  shift, and go to state 75


state 57

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 76


state 58

   14 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 77


state 59

   20 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 60

   13 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 13 (DECLARATION)


state 61

   22 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 22 (LOGICAL_EXP)


state 62

   23 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 23 (LOGICAL_EXP)


state 63

   25 REL_EXP: EXP EQ EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 25 (REL_EXP)


state 64

   26 REL_EXP: EXP NE EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 26 (REL_EXP)


state 65

   27 REL_EXP: EXP LT EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 27 (REL_EXP)


state 66

   28 REL_EXP: EXP LE EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 28 (REL_EXP)


state 67

   29 REL_EXP: EXP GT EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 29 (REL_EXP)


state 68

   30 REL_EXP: EXP GE EXP .
   32 EXP: EXP . ADD TERM
   33    | EXP . SUB TERM

    SUB  shift, and go to state 49
    ADD  shift, and go to state 50

    $default  reduce using rule 30 (REL_EXP)


state 69

   33 EXP: EXP SUB TERM .
   35 TERM: TERM . MUL POWER
   36     | TERM . DIV POWER

    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 33 (EXP)


state 70

   32 EXP: EXP ADD TERM .
   35 TERM: TERM . MUL POWER
   36     | TERM . DIV POWER

    DIV  shift, and go to state 51
    MUL  shift, and go to state 52

    $default  reduce using rule 32 (EXP)


state 71

   36 TERM: TERM DIV POWER .

    $default  reduce using rule 36 (TERM)


state 72

   35 TERM: TERM MUL POWER .

    $default  reduce using rule 35 (TERM)


state 73

   38 POWER: FACTOR POW POWER .

    $default  reduce using rule 38 (POWER)


state 74

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 79


state 75

   21 ASSIGNMENT_FORLOOP: ID ASSIGN . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 80
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 76

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 5
    INTEGER  shift, and go to state 11
    FLOAT    shift, and go to state 12
    CHAR     shift, and go to state 13
    ID       shift, and go to state 29

    LOGICAL_EXP  go to state 81
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    POWER        go to state 27
    FACTOR       go to state 28


state 77

   14 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 14 (CONST_DECLARATION)


state 78

   20 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 20 (ASSIGNMENT)


state 79

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 80

   21 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP .

    $default  reduce using rule 21 (ASSIGNMENT_FORLOOP)


state 81

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 82


state 82

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 56

    ASSIGNMENT_FORLOOP  go to state 83


state 83

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP . RPAREN LBRACE $@3 STMTS RBRACE

    RPAREN  shift, and go to state 84


state 84

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN . LBRACE $@3 STMTS RBRACE

    LBRACE  shift, and go to state 85


state 85

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE . $@3 STMTS RBRACE

    $default  reduce using rule 18 ($@3)

    $@3  go to state 86


state 86

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    ERROR       shift, and go to state 10
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    STMTS              go to state 87
    BLOCK              go to state 16
    STMT               go to state 17
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 87

    1 STMTS: STMTS . STMT
   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 88
    FOR         shift, and go to state 4
    SUB         shift, and go to state 5
    INT_TYPE    shift, and go to state 6
    FLOAT_TYPE  shift, and go to state 7
    CHAR_TYPE   shift, and go to state 8
    CONST       shift, and go to state 9
    INTEGER     shift, and go to state 11
    FLOAT       shift, and go to state 12
    CHAR        shift, and go to state 13
    ID          shift, and go to state 14

    BLOCK              go to state 16
    STMT               go to state 38
    DECLARATION        go to state 18
    CONST_DECLARATION  go to state 19
    PARAM_TYPE         go to state 20
    FOR_LOOP           go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    POWER              go to state 27
    FACTOR             go to state 28


state 88

   19 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE .

    $default  reduce using rule 19 (FOR_LOOP)
