Terminals unused in grammar

   POW


State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 STMT: MATCHED_IF
    5     | UNMATCHED_IF
    6     | SWITCH_CASE
    7     | FOR_LOOP
    8     | WHILE_LOOP
    9     | REPEAT_UNTIL_LOOP
   10     | FUNCTION_DECL SEMICOLON
   11     | FUNCTION_DECL FUNCTION_BODY
   12     | ASSIGNMENT SEMICOLON
   13     | LOGICAL_EXP SEMICOLON

   14 FUNCTION_DECL: RETURN_TYPE ID LPAREN PARAMS RPAREN

   15 FUNCTION_BODY: LBRACE FUNCTION_STMTS RBRACE

   16 FUNCTION_STMTS: STMTS RETURN EXP SEMICOLON
   17               | RETURN EXP SEMICOLON
   18               | RETURN SEMICOLON

   19 PARAMS: PARAMS COMMA PARAM
   20       | PARAM
   21       | /* empty */

   22 PARAM: PARAM_TYPE ID

   23 PARAM_TYPE: INT_TYPE
   24           | FLOAT_TYPE
   25           | CHAR_TYPE

   26 RETURN_TYPE: VOID_TYPE
   27            | INT_TYPE
   28            | FLOAT_TYPE
   29            | CHAR_TYPE

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

   31 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON
   32             | /* empty */

   33 CASES: CASES CASE_BLOCK
   34      | CASE_BLOCK

   35 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON

   36 CASE_STMTS: STMTS
   37           | /* empty */

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE

   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   44             | IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

   45 ASSIGNMENT: ID ASSIGN EXP

   46 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   47            | REL_EXP AND LOGICAL_EXP
   48            | REL_EXP

   49 REL_EXP: EXP EQ EXP
   50        | EXP NE EXP
   51        | EXP LT EXP
   52        | EXP LE EXP
   53        | EXP GT EXP
   54        | EXP GE EXP
   55        | EXP

   56 EXP: EXP ADD TERM
   57    | EXP SUB TERM
   58    | TERM

   59 TERM: TERM MUL FACTOR
   60     | TERM DIV FACTOR
   61     | FACTOR

   62 FACTOR: LPAREN LOGICAL_EXP RPAREN
   63       | SUB FACTOR
   64       | NOT FACTOR
   65       | INTEGER
   66       | FLOAT
   67       | CHAR
   68       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258)
NOT (259) 64
OR (260) 46
AND (261) 47
EQ (262) 49
NE (263) 50
LT (264) 51
LE (265) 52
GT (266) 53
GE (267) 54
ASSIGN (268) 45
LPAREN (269) 14 30 38 39 40 41 42 43 44 62
RPAREN (270) 14 30 38 39 40 41 42 43 44 62
LBRACE (271) 15 30 38 39 40 41 42 43 44
RBRACE (272) 15 30 38 39 40 41 42 43 44
SEMICOLON (273) 10 12 13 16 17 18 31 35 38 40
COLON (274) 31 35
FOR (275) 38
WHILE (276) 39
REPEAT (277) 40
UNTIL (278) 40
IF (279) 41 42 43 44
ELSE (280) 41 42 44
SWITCH (281) 30
CASE (282) 35
BREAK (283) 31 35
DEFAULT (284) 31
SUB (285) 57 63
ADD (286) 56
DIV (287) 60
MUL (288) 59
INT_TYPE (289) 23 27
FLOAT_TYPE (290) 24 28
CHAR_TYPE (291) 25 29
VOID_TYPE (292) 26
RETURN (293) 16 17 18
COMMA (294) 19
ERROR (295) 3
INTEGER (296) 35 65
FLOAT (297) 66
CHAR (298) 67
ID (299) 14 22 30 45 68


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
STMTS (46)
    on left: 1 2 3, on right: 0 1 16 31 36 38 39 40
STMT (47)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 1 2 42 43
FUNCTION_DECL (48)
    on left: 14, on right: 10 11
FUNCTION_BODY (49)
    on left: 15, on right: 11
FUNCTION_STMTS (50)
    on left: 16 17 18, on right: 15
PARAMS (51)
    on left: 19 20 21, on right: 14 19
PARAM (52)
    on left: 22, on right: 19 20
PARAM_TYPE (53)
    on left: 23 24 25, on right: 22
RETURN_TYPE (54)
    on left: 26 27 28 29, on right: 14
SWITCH_CASE (55)
    on left: 30, on right: 6
CASE_DEFAULT (56)
    on left: 31 32, on right: 30
CASES (57)
    on left: 33 34, on right: 30 33
CASE_BLOCK (58)
    on left: 35, on right: 33 34
CASE_STMTS (59)
    on left: 36 37, on right: 35
FOR_LOOP (60)
    on left: 38, on right: 7
WHILE_LOOP (61)
    on left: 39, on right: 8
REPEAT_UNTIL_LOOP (62)
    on left: 40, on right: 9
MATCHED_IF (63)
    on left: 41 42, on right: 4 41 44
UNMATCHED_IF (64)
    on left: 43 44, on right: 5 44
ASSIGNMENT (65)
    on left: 45, on right: 12 38
LOGICAL_EXP (66)
    on left: 46 47 48, on right: 13 38 39 40 41 42 43 44 46 47 62
REL_EXP (67)
    on left: 49 50 51 52 53 54 55, on right: 46 47 48
EXP (68)
    on left: 56 57 58, on right: 16 17 45 49 50 51 52 53 54 55 56 57
TERM (69)
    on left: 59 60 61, on right: 56 57 58 59 60
FACTOR (70)
    on left: 62 63 64 65 66 67 68, on right: 59 60 61 63 64


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 18
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 1

   64 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    FACTOR  go to state 35


state 2

   62 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 36
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 3

   38 FOR_LOOP: FOR . LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 37


state 4

   39 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 38


state 5

   40 REPEAT_UNTIL_LOOP: REPEAT . LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LBRACE  shift, and go to state 39


state 6

   41 MATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   44             | IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LPAREN  shift, and go to state 40


state 7

   30 SWITCH_CASE: SWITCH . LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    LPAREN  shift, and go to state 41


state 8

   63 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    FACTOR  go to state 42


state 9

   27 RETURN_TYPE: INT_TYPE .

    $default  reduce using rule 27 (RETURN_TYPE)


state 10

   28 RETURN_TYPE: FLOAT_TYPE .

    $default  reduce using rule 28 (RETURN_TYPE)


state 11

   29 RETURN_TYPE: CHAR_TYPE .

    $default  reduce using rule 29 (RETURN_TYPE)


state 12

   26 RETURN_TYPE: VOID_TYPE .

    $default  reduce using rule 26 (RETURN_TYPE)


state 13

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 14

   65 FACTOR: INTEGER .

    $default  reduce using rule 65 (FACTOR)


state 15

   66 FACTOR: FLOAT .

    $default  reduce using rule 66 (FACTOR)


state 16

   67 FACTOR: CHAR .

    $default  reduce using rule 67 (FACTOR)


state 17

   45 ASSIGNMENT: ID . ASSIGN EXP
   68 FACTOR: ID .

    ASSIGN  shift, and go to state 43

    $default  reduce using rule 68 (FACTOR)


state 18

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 44
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 19

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 20

   10 STMT: FUNCTION_DECL . SEMICOLON
   11     | FUNCTION_DECL . FUNCTION_BODY

    LBRACE     shift, and go to state 46
    SEMICOLON  shift, and go to state 47

    FUNCTION_BODY  go to state 48


state 21

   14 FUNCTION_DECL: RETURN_TYPE . ID LPAREN PARAMS RPAREN

    ID  shift, and go to state 49


state 22

    6 STMT: SWITCH_CASE .

    $default  reduce using rule 6 (STMT)


state 23

    7 STMT: FOR_LOOP .

    $default  reduce using rule 7 (STMT)


state 24

    8 STMT: WHILE_LOOP .

    $default  reduce using rule 8 (STMT)


state 25

    9 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 9 (STMT)


state 26

    4 STMT: MATCHED_IF .

    $default  reduce using rule 4 (STMT)


state 27

    5 STMT: UNMATCHED_IF .

    $default  reduce using rule 5 (STMT)


state 28

   12 STMT: ASSIGNMENT . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 29

   13 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 30

   46 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   47            | REL_EXP . AND LOGICAL_EXP
   48            | REL_EXP .

    OR   shift, and go to state 52
    AND  shift, and go to state 53

    $default  reduce using rule 48 (LOGICAL_EXP)


state 31

   49 REL_EXP: EXP . EQ EXP
   50        | EXP . NE EXP
   51        | EXP . LT EXP
   52        | EXP . LE EXP
   53        | EXP . GT EXP
   54        | EXP . GE EXP
   55        | EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    EQ   shift, and go to state 54
    NE   shift, and go to state 55
    LT   shift, and go to state 56
    LE   shift, and go to state 57
    GT   shift, and go to state 58
    GE   shift, and go to state 59
    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 55 (REL_EXP)


state 32

   58 EXP: TERM .
   59 TERM: TERM . MUL FACTOR
   60     | TERM . DIV FACTOR

    DIV  shift, and go to state 62
    MUL  shift, and go to state 63

    $default  reduce using rule 58 (EXP)


state 33

   61 TERM: FACTOR .

    $default  reduce using rule 61 (TERM)


state 34

   68 FACTOR: ID .

    $default  reduce using rule 68 (FACTOR)


state 35

   64 FACTOR: NOT FACTOR .

    $default  reduce using rule 64 (FACTOR)


state 36

   62 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 64


state 37

   38 FOR_LOOP: FOR LPAREN . ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT  go to state 66


state 38

   39 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 67
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 39

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 68
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 40

   41 MATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   44             | IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 69
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 41

   30 SWITCH_CASE: SWITCH LPAREN . ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    ID  shift, and go to state 70


state 42

   63 FACTOR: SUB FACTOR .

    $default  reduce using rule 63 (FACTOR)


state 43

   45 ASSIGNMENT: ID ASSIGN . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 71
    TERM    go to state 32
    FACTOR  go to state 33


state 44

    0 $accept: STMTS $end .

    $default  accept


state 45

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 46

   15 FUNCTION_BODY: LBRACE . FUNCTION_STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    RETURN      shift, and go to state 72
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 73
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    FUNCTION_STMTS     go to state 74
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 47

   10 STMT: FUNCTION_DECL SEMICOLON .

    $default  reduce using rule 10 (STMT)


state 48

   11 STMT: FUNCTION_DECL FUNCTION_BODY .

    $default  reduce using rule 11 (STMT)


state 49

   14 FUNCTION_DECL: RETURN_TYPE ID . LPAREN PARAMS RPAREN

    LPAREN  shift, and go to state 75


state 50

   12 STMT: ASSIGNMENT SEMICOLON .

    $default  reduce using rule 12 (STMT)


state 51

   13 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 13 (STMT)


state 52

   46 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 76
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 53

   47 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 77
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 54

   49 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 78
    TERM    go to state 32
    FACTOR  go to state 33


state 55

   50 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 79
    TERM    go to state 32
    FACTOR  go to state 33


state 56

   51 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 80
    TERM    go to state 32
    FACTOR  go to state 33


state 57

   52 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 81
    TERM    go to state 32
    FACTOR  go to state 33


state 58

   53 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 82
    TERM    go to state 32
    FACTOR  go to state 33


state 59

   54 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 83
    TERM    go to state 32
    FACTOR  go to state 33


state 60

   57 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    TERM    go to state 84
    FACTOR  go to state 33


state 61

   56 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    TERM    go to state 85
    FACTOR  go to state 33


state 62

   60 TERM: TERM DIV . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    FACTOR  go to state 86


state 63

   59 TERM: TERM MUL . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    FACTOR  go to state 87


state 64

   62 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 62 (FACTOR)


state 65

   45 ASSIGNMENT: ID . ASSIGN EXP

    ASSIGN  shift, and go to state 43


state 66

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 88


state 67

   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 89


state 68

    1 STMTS: STMTS . STMT
   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    RBRACE      shift, and go to state 90
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 69

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE
   44             | IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RPAREN  shift, and go to state 91


state 70

   30 SWITCH_CASE: SWITCH LPAREN ID . RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    RPAREN  shift, and go to state 92


state 71

   45 ASSIGNMENT: ID ASSIGN EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 45 (ASSIGNMENT)


state 72

   17 FUNCTION_STMTS: RETURN . EXP SEMICOLON
   18               | RETURN . SEMICOLON

    NOT        shift, and go to state 1
    LPAREN     shift, and go to state 2
    SEMICOLON  shift, and go to state 93
    SUB        shift, and go to state 8
    INTEGER    shift, and go to state 14
    FLOAT      shift, and go to state 15
    CHAR       shift, and go to state 16
    ID         shift, and go to state 34

    EXP     go to state 94
    TERM    go to state 32
    FACTOR  go to state 33


state 73

    1 STMTS: STMTS . STMT
   16 FUNCTION_STMTS: STMTS . RETURN EXP SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    RETURN      shift, and go to state 95
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 74

   15 FUNCTION_BODY: LBRACE FUNCTION_STMTS . RBRACE

    RBRACE  shift, and go to state 96


state 75

   14 FUNCTION_DECL: RETURN_TYPE ID LPAREN . PARAMS RPAREN

    INT_TYPE    shift, and go to state 97
    FLOAT_TYPE  shift, and go to state 98
    CHAR_TYPE   shift, and go to state 99

    $default  reduce using rule 21 (PARAMS)

    PARAMS      go to state 100
    PARAM       go to state 101
    PARAM_TYPE  go to state 102


state 76

   46 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 46 (LOGICAL_EXP)


state 77

   47 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 47 (LOGICAL_EXP)


state 78

   49 REL_EXP: EXP EQ EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 49 (REL_EXP)


state 79

   50 REL_EXP: EXP NE EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 50 (REL_EXP)


state 80

   51 REL_EXP: EXP LT EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 51 (REL_EXP)


state 81

   52 REL_EXP: EXP LE EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 52 (REL_EXP)


state 82

   53 REL_EXP: EXP GT EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 53 (REL_EXP)


state 83

   54 REL_EXP: EXP GE EXP .
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SUB  shift, and go to state 60
    ADD  shift, and go to state 61

    $default  reduce using rule 54 (REL_EXP)


state 84

   57 EXP: EXP SUB TERM .
   59 TERM: TERM . MUL FACTOR
   60     | TERM . DIV FACTOR

    DIV  shift, and go to state 62
    MUL  shift, and go to state 63

    $default  reduce using rule 57 (EXP)


state 85

   56 EXP: EXP ADD TERM .
   59 TERM: TERM . MUL FACTOR
   60     | TERM . DIV FACTOR

    DIV  shift, and go to state 62
    MUL  shift, and go to state 63

    $default  reduce using rule 56 (EXP)


state 86

   60 TERM: TERM DIV FACTOR .

    $default  reduce using rule 60 (TERM)


state 87

   59 TERM: TERM MUL FACTOR .

    $default  reduce using rule 59 (TERM)


state 88

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 103
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 89

   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 104


state 90

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    UNTIL  shift, and go to state 105


state 91

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE
   44             | IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 106


state 92

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN . LBRACE CASES CASE_DEFAULT RBRACE

    LBRACE  shift, and go to state 107


state 93

   18 FUNCTION_STMTS: RETURN SEMICOLON .

    $default  reduce using rule 18 (FUNCTION_STMTS)


state 94

   17 FUNCTION_STMTS: RETURN EXP . SEMICOLON
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SEMICOLON  shift, and go to state 108
    SUB        shift, and go to state 60
    ADD        shift, and go to state 61


state 95

   16 FUNCTION_STMTS: STMTS RETURN . EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    EXP     go to state 109
    TERM    go to state 32
    FACTOR  go to state 33


state 96

   15 FUNCTION_BODY: LBRACE FUNCTION_STMTS RBRACE .

    $default  reduce using rule 15 (FUNCTION_BODY)


state 97

   23 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 23 (PARAM_TYPE)


state 98

   24 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 24 (PARAM_TYPE)


state 99

   25 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 25 (PARAM_TYPE)


state 100

   14 FUNCTION_DECL: RETURN_TYPE ID LPAREN PARAMS . RPAREN
   19 PARAMS: PARAMS . COMMA PARAM

    RPAREN  shift, and go to state 110
    COMMA   shift, and go to state 111


state 101

   20 PARAMS: PARAM .

    $default  reduce using rule 20 (PARAMS)


state 102

   22 PARAM: PARAM_TYPE . ID

    ID  shift, and go to state 112


state 103

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 113


state 104

   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 114
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 105

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LPAREN  shift, and go to state 115


state 106

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   42           | IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE
   44             | IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 116
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 117
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 107

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE . CASES CASE_DEFAULT RBRACE

    CASE  shift, and go to state 118

    CASES       go to state 119
    CASE_BLOCK  go to state 120


state 108

   17 FUNCTION_STMTS: RETURN EXP SEMICOLON .

    $default  reduce using rule 17 (FUNCTION_STMTS)


state 109

   16 FUNCTION_STMTS: STMTS RETURN EXP . SEMICOLON
   56 EXP: EXP . ADD TERM
   57    | EXP . SUB TERM

    SEMICOLON  shift, and go to state 121
    SUB        shift, and go to state 60
    ADD        shift, and go to state 61


state 110

   14 FUNCTION_DECL: RETURN_TYPE ID LPAREN PARAMS RPAREN .

    $default  reduce using rule 14 (FUNCTION_DECL)


state 111

   19 PARAMS: PARAMS COMMA . PARAM

    INT_TYPE    shift, and go to state 97
    FLOAT_TYPE  shift, and go to state 98
    CHAR_TYPE   shift, and go to state 99

    PARAM       go to state 122
    PARAM_TYPE  go to state 102


state 112

   22 PARAM: PARAM_TYPE ID .

    $default  reduce using rule 22 (PARAM)


state 113

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 65

    ASSIGNMENT  go to state 123


state 114

    1 STMTS: STMTS . STMT
   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    RBRACE      shift, and go to state 124
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 115

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 14
    FLOAT    shift, and go to state 15
    CHAR     shift, and go to state 16
    ID       shift, and go to state 34

    LOGICAL_EXP  go to state 125
    REL_EXP      go to state 30
    EXP          go to state 31
    TERM         go to state 32
    FACTOR       go to state 33


state 116

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 126


state 117

    4 STMT: MATCHED_IF .
   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE MATCHED_IF RBRACE
   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RBRACE  shift, and go to state 127

    RBRACE  [reduce using rule 4 (STMT)]


state 118

   35 CASE_BLOCK: CASE . INTEGER COLON CASE_STMTS BREAK SEMICOLON

    INTEGER  shift, and go to state 128


state 119

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES . CASE_DEFAULT RBRACE
   33 CASES: CASES . CASE_BLOCK

    CASE     shift, and go to state 118
    DEFAULT  shift, and go to state 129

    $default  reduce using rule 32 (CASE_DEFAULT)

    CASE_DEFAULT  go to state 130
    CASE_BLOCK    go to state 131


state 120

   34 CASES: CASE_BLOCK .

    $default  reduce using rule 34 (CASES)


state 121

   16 FUNCTION_STMTS: STMTS RETURN EXP SEMICOLON .

    $default  reduce using rule 16 (FUNCTION_STMTS)


state 122

   19 PARAMS: PARAMS COMMA PARAM .

    $default  reduce using rule 19 (PARAMS)


state 123

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 132


state 124

   39 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 39 (WHILE_LOOP)


state 125

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . RPAREN SEMICOLON

    RPAREN  shift, and go to state 133


state 126

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE . ELSE LBRACE STMT RBRACE
   43 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE .

    ELSE  shift, and go to state 134

    $default  reduce using rule 43 (UNMATCHED_IF)


state 127

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE MATCHED_IF RBRACE
   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE UNMATCHED_IF RBRACE

    ELSE  shift, and go to state 135


state 128

   35 CASE_BLOCK: CASE INTEGER . COLON CASE_STMTS BREAK SEMICOLON

    COLON  shift, and go to state 136


state 129

   31 CASE_DEFAULT: DEFAULT . COLON STMTS BREAK SEMICOLON

    COLON  shift, and go to state 137


state 130

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT . RBRACE

    RBRACE  shift, and go to state 138


state 131

   33 CASES: CASES CASE_BLOCK .

    $default  reduce using rule 33 (CASES)


state 132

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 139


state 133

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 140


state 134

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE . LBRACE STMT RBRACE

    LBRACE  shift, and go to state 141


state 135

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE MATCHED_IF RBRACE
   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 142


state 136

   35 CASE_BLOCK: CASE INTEGER COLON . CASE_STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    $default  reduce using rule 37 (CASE_STMTS)

    STMTS              go to state 143
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    CASE_STMTS         go to state 144
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 137

   31 CASE_DEFAULT: DEFAULT COLON . STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 145
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 138

   30 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE .

    $default  reduce using rule 30 (SWITCH_CASE)


state 139

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    ERROR       shift, and go to state 13
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMTS              go to state 146
    STMT               go to state 19
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 140

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON .

    $default  reduce using rule 40 (REPEAT_UNTIL_LOOP)


state 141

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE . STMT RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 147
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 142

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . MATCHED_IF RBRACE
   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . UNMATCHED_IF RBRACE

    IF  shift, and go to state 6

    MATCHED_IF    go to state 148
    UNMATCHED_IF  go to state 149


state 143

    1 STMTS: STMTS . STMT
   36 CASE_STMTS: STMTS .

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    $default  reduce using rule 36 (CASE_STMTS)

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 144

   35 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS . BREAK SEMICOLON

    BREAK  shift, and go to state 150


state 145

    1 STMTS: STMTS . STMT
   31 CASE_DEFAULT: DEFAULT COLON STMTS . BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    BREAK       shift, and go to state 151
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 146

    1 STMTS: STMTS . STMT
   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    RBRACE      shift, and go to state 152
    FOR         shift, and go to state 3
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    SWITCH      shift, and go to state 7
    SUB         shift, and go to state 8
    INT_TYPE    shift, and go to state 9
    FLOAT_TYPE  shift, and go to state 10
    CHAR_TYPE   shift, and go to state 11
    VOID_TYPE   shift, and go to state 12
    INTEGER     shift, and go to state 14
    FLOAT       shift, and go to state 15
    CHAR        shift, and go to state 16
    ID          shift, and go to state 17

    STMT               go to state 45
    FUNCTION_DECL      go to state 20
    RETURN_TYPE        go to state 21
    SWITCH_CASE        go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    MATCHED_IF         go to state 26
    UNMATCHED_IF       go to state 27
    ASSIGNMENT         go to state 28
    LOGICAL_EXP        go to state 29
    REL_EXP            go to state 30
    EXP                go to state 31
    TERM               go to state 32
    FACTOR             go to state 33


state 147

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 153


state 148

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF . RBRACE

    RBRACE  shift, and go to state 154


state 149

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF . RBRACE

    RBRACE  shift, and go to state 155


state 150

   35 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 156


state 151

   31 CASE_DEFAULT: DEFAULT COLON STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 157


state 152

   38 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 38 (FOR_LOOP)


state 153

   42 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE .

    $default  reduce using rule 42 (MATCHED_IF)


state 154

   41 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE .

    $default  reduce using rule 41 (MATCHED_IF)


state 155

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE .

    $default  reduce using rule 44 (UNMATCHED_IF)


state 156

   35 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON .

    $default  reduce using rule 35 (CASE_BLOCK)


state 157

   31 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON .

    $default  reduce using rule 31 (CASE_DEFAULT)
