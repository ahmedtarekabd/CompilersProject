Terminals unused in grammar

   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: MATCHED_IF
    8     | UNMATCHED_IF
    9     | SWITCH_BLOCK
   10     | BLOCK
   11     | FOR_LOOP
   12     | WHILE_LOOP
   13     | REPEAT_UNTIL_LOOP
   14     | DECLARATION
   15     | CONST_DECLARATION
   16     | ASSIGNMENT
   17     | LOGICAL_EXP SEMICOLON

   18 DECLARATION: PARAM_TYPE ID SEMICOLON

   19 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   20 PARAM_TYPE: INT_TYPE
   21           | FLOAT_TYPE
   22           | CHAR_TYPE

   23 $@3: /* empty */

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

   25 SWITCH_CASE: CASE_STMTS
   26            | CASE_STMTS DEFAULT_STMT
   27            | DEFAULT_STMT

   28 CASE_STMTS: CASE_STMT
   29           | CASE_STMTS CASE_STMT

   30 $@4: /* empty */

   31 $@5: /* empty */

   32 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON

   33 DEFAULT_STMT: DEFAULT COLON STMTS BREAK SEMICOLON

   34 $@6: /* empty */

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

   36 $@7: /* empty */

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMTS RBRACE

   38 $@8: /* empty */

   39 $@9: /* empty */

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

   41 $@10: /* empty */

   42 MATCHED_IF: UNMATCHED_IF ELSE LBRACE $@10 STMTS RBRACE

   43 $@11: /* empty */

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMTS RBRACE

   45 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   46 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP

   47 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   48            | REL_EXP AND LOGICAL_EXP
   49            | REL_EXP

   50 REL_EXP: EXP EQ EXP
   51        | EXP NE EXP
   52        | EXP LT EXP
   53        | EXP LE EXP
   54        | EXP GT EXP
   55        | EXP GE EXP
   56        | EXP

   57 EXP: EXP ADD TERM
   58    | EXP SUB TERM
   59    | TERM

   60 TERM: TERM MUL POWER
   61     | TERM DIV POWER
   62     | POWER

   63 POWER: FACTOR POW POWER
   64      | FACTOR

   65 FACTOR: LPAREN LOGICAL_EXP RPAREN
   66       | SUB FACTOR
   67       | NOT FACTOR
   68       | INTEGER
   69       | FLOAT
   70       | CHAR
   71       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 63
NOT (259) 67
OR (260) 47
AND (261) 48
EQ (262) 50
NE (263) 51
LT (264) 52
LE (265) 53
GT (266) 54
GE (267) 55
ASSIGN (268) 45 46
LPAREN (269) 24 35 37 40 44 65
RPAREN (270) 24 35 37 40 44 65
LBRACE (271) 6 24 35 37 40 42 44
RBRACE (272) 6 24 35 37 40 42 44
SEMICOLON (273) 17 18 19 32 33 35 40 45
COLON (274) 32 33
FOR (275) 35
WHILE (276) 37
REPEAT (277) 40
UNTIL (278) 40
IF (279) 44
ELSE (280) 42
SWITCH (281) 24
CASE (282) 32
BREAK (283) 32 33
DEFAULT (284) 33
SUB (285) 58 66
ADD (286) 57
DIV (287) 61
MUL (288) 60
INT_TYPE (289) 20
FLOAT_TYPE (290) 21
CHAR_TYPE (291) 22
VOID_TYPE (292)
CONST (293) 19
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 32 68
FLOAT (298) 69
CHAR (299) 70
ID (300) 18 19 24 45 46 71


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 32 33 35 37 40 42 44
BLOCK (48)
    on left: 6, on right: 10
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 1 2
DECLARATION (52)
    on left: 18, on right: 14
CONST_DECLARATION (53)
    on left: 19, on right: 15
PARAM_TYPE (54)
    on left: 20 21 22, on right: 18 19
SWITCH_BLOCK (55)
    on left: 24, on right: 9
$@3 (56)
    on left: 23, on right: 24
SWITCH_CASE (57)
    on left: 25 26 27, on right: 24
CASE_STMTS (58)
    on left: 28 29, on right: 25 26 29
CASE_STMT (59)
    on left: 32, on right: 28 29
$@4 (60)
    on left: 30, on right: 32
$@5 (61)
    on left: 31, on right: 32
DEFAULT_STMT (62)
    on left: 33, on right: 26 27
FOR_LOOP (63)
    on left: 35, on right: 11
$@6 (64)
    on left: 34, on right: 35
WHILE_LOOP (65)
    on left: 37, on right: 12
$@7 (66)
    on left: 36, on right: 37
REPEAT_UNTIL_LOOP (67)
    on left: 40, on right: 13
$@8 (68)
    on left: 38, on right: 40
$@9 (69)
    on left: 39, on right: 40
MATCHED_IF (70)
    on left: 42, on right: 7
$@10 (71)
    on left: 41, on right: 42
UNMATCHED_IF (72)
    on left: 44, on right: 8 42
$@11 (73)
    on left: 43, on right: 44
ASSIGNMENT (74)
    on left: 45, on right: 16
ASSIGNMENT_FORLOOP (75)
    on left: 46, on right: 35
LOGICAL_EXP (76)
    on left: 47 48 49, on right: 17 35 37 40 44 45 46 47 48 65
REL_EXP (77)
    on left: 50 51 52 53 54 55 56, on right: 47 48 49
EXP (78)
    on left: 57 58 59, on right: 50 51 52 53 54 55 56 57 58
TERM (79)
    on left: 60 61 62, on right: 57 58 59 60 61
POWER (80)
    on left: 63 64, on right: 60 61 62 63
FACTOR (81)
    on left: 65 66 67 68 69 70 71, on right: 63 64 66 67


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 19
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 1

   67 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    FACTOR  go to state 39


state 2

   65 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 40
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 41


state 4

   35 FOR_LOOP: FOR . LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    LPAREN  shift, and go to state 42


state 5

   37 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMTS RBRACE

    LPAREN  shift, and go to state 43


state 6

   40 REPEAT_UNTIL_LOOP: REPEAT . LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    LBRACE  shift, and go to state 44


state 7

   44 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMTS RBRACE

    LPAREN  shift, and go to state 45


state 8

   24 SWITCH_BLOCK: SWITCH . LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    LPAREN  shift, and go to state 46


state 9

   66 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    FACTOR  go to state 47


state 10

   20 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 20 (PARAM_TYPE)


state 11

   21 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 21 (PARAM_TYPE)


state 12

   22 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 22 (PARAM_TYPE)


state 13

   19 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12

    PARAM_TYPE  go to state 48


state 14

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 15

   68 FACTOR: INTEGER .

    $default  reduce using rule 68 (FACTOR)


state 16

   69 FACTOR: FLOAT .

    $default  reduce using rule 69 (FACTOR)


state 17

   70 FACTOR: CHAR .

    $default  reduce using rule 70 (FACTOR)


state 18

   45 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   71 FACTOR: ID .

    ASSIGN  shift, and go to state 49

    $default  reduce using rule 71 (FACTOR)


state 19

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 50
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 20

   10 STMT: BLOCK .

    $default  reduce using rule 10 (STMT)


state 21

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 22

   14 STMT: DECLARATION .

    $default  reduce using rule 14 (STMT)


state 23

   15 STMT: CONST_DECLARATION .

    $default  reduce using rule 15 (STMT)


state 24

   18 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 52


state 25

    9 STMT: SWITCH_BLOCK .

    $default  reduce using rule 9 (STMT)


state 26

   11 STMT: FOR_LOOP .

    $default  reduce using rule 11 (STMT)


state 27

   12 STMT: WHILE_LOOP .

    $default  reduce using rule 12 (STMT)


state 28

   13 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 13 (STMT)


state 29

    7 STMT: MATCHED_IF .

    $default  reduce using rule 7 (STMT)


state 30

    8 STMT: UNMATCHED_IF .
   42 MATCHED_IF: UNMATCHED_IF . ELSE LBRACE $@10 STMTS RBRACE

    ELSE  shift, and go to state 53

    $default  reduce using rule 8 (STMT)


state 31

   16 STMT: ASSIGNMENT .

    $default  reduce using rule 16 (STMT)


state 32

   17 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 33

   47 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   48            | REL_EXP . AND LOGICAL_EXP
   49            | REL_EXP .

    OR   shift, and go to state 55
    AND  shift, and go to state 56

    $default  reduce using rule 49 (LOGICAL_EXP)


state 34

   50 REL_EXP: EXP . EQ EXP
   51        | EXP . NE EXP
   52        | EXP . LT EXP
   53        | EXP . LE EXP
   54        | EXP . GT EXP
   55        | EXP . GE EXP
   56        | EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    EQ   shift, and go to state 57
    NE   shift, and go to state 58
    LT   shift, and go to state 59
    LE   shift, and go to state 60
    GT   shift, and go to state 61
    GE   shift, and go to state 62
    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 56 (REL_EXP)


state 35

   59 EXP: TERM .
   60 TERM: TERM . MUL POWER
   61     | TERM . DIV POWER

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 59 (EXP)


state 36

   62 TERM: POWER .

    $default  reduce using rule 62 (TERM)


state 37

   63 POWER: FACTOR . POW POWER
   64      | FACTOR .

    POW  shift, and go to state 67

    $default  reduce using rule 64 (POWER)


state 38

   71 FACTOR: ID .

    $default  reduce using rule 71 (FACTOR)


state 39

   67 FACTOR: NOT FACTOR .

    $default  reduce using rule 67 (FACTOR)


state 40

   65 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 68


state 41

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 69
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 42

   35 FOR_LOOP: FOR LPAREN . ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    ID  shift, and go to state 70

    ASSIGNMENT_FORLOOP  go to state 71


state 43

   37 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE $@7 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 72
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 44

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE . $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    $default  reduce using rule 38 ($@8)

    $@8  go to state 73


state 45

   44 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE $@11 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 74
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 46

   24 SWITCH_BLOCK: SWITCH LPAREN . ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    ID  shift, and go to state 75


state 47

   66 FACTOR: SUB FACTOR .

    $default  reduce using rule 66 (FACTOR)


state 48

   19 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 76


state 49

   45 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 77
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 50

    0 $accept: STMTS $end .

    $default  accept


state 51

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 52

   18 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 53

   42 MATCHED_IF: UNMATCHED_IF ELSE . LBRACE $@10 STMTS RBRACE

    LBRACE  shift, and go to state 79


state 54

   17 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 17 (STMT)


state 55

   47 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 80
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 56

   48 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 81
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 57

   50 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 82
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 58

   51 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 83
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 59

   52 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 84
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 60

   53 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 85
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 61

   54 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 86
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 62

   55 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    EXP     go to state 87
    TERM    go to state 35
    POWER   go to state 36
    FACTOR  go to state 37


state 63

   58 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    TERM    go to state 88
    POWER   go to state 36
    FACTOR  go to state 37


state 64

   57 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    TERM    go to state 89
    POWER   go to state 36
    FACTOR  go to state 37


state 65

   61 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 90
    FACTOR  go to state 37


state 66

   60 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 91
    FACTOR  go to state 37


state 67

   63 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    POWER   go to state 92
    FACTOR  go to state 37


state 68

   65 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 65 (FACTOR)


state 69

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 93
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 70

   46 ASSIGNMENT_FORLOOP: ID . ASSIGN LOGICAL_EXP

    ASSIGN  shift, and go to state 94


state 71

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    SEMICOLON  shift, and go to state 95


state 72

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE $@7 STMTS RBRACE

    RPAREN  shift, and go to state 96


state 73

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 97
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 74

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE $@11 STMTS RBRACE

    RPAREN  shift, and go to state 98


state 75

   24 SWITCH_BLOCK: SWITCH LPAREN ID . RPAREN LBRACE $@3 SWITCH_CASE RBRACE

    RPAREN  shift, and go to state 99


state 76

   19 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 100


state 77

   45 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 101


state 78

   18 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 18 (DECLARATION)


state 79

   42 MATCHED_IF: UNMATCHED_IF ELSE LBRACE . $@10 STMTS RBRACE

    $default  reduce using rule 41 ($@10)

    $@10  go to state 102


state 80

   47 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 47 (LOGICAL_EXP)


state 81

   48 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 48 (LOGICAL_EXP)


state 82

   50 REL_EXP: EXP EQ EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 50 (REL_EXP)


state 83

   51 REL_EXP: EXP NE EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 51 (REL_EXP)


state 84

   52 REL_EXP: EXP LT EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 52 (REL_EXP)


state 85

   53 REL_EXP: EXP LE EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 53 (REL_EXP)


state 86

   54 REL_EXP: EXP GT EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 54 (REL_EXP)


state 87

   55 REL_EXP: EXP GE EXP .
   57 EXP: EXP . ADD TERM
   58    | EXP . SUB TERM

    SUB  shift, and go to state 63
    ADD  shift, and go to state 64

    $default  reduce using rule 55 (REL_EXP)


state 88

   58 EXP: EXP SUB TERM .
   60 TERM: TERM . MUL POWER
   61     | TERM . DIV POWER

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 58 (EXP)


state 89

   57 EXP: EXP ADD TERM .
   60 TERM: TERM . MUL POWER
   61     | TERM . DIV POWER

    DIV  shift, and go to state 65
    MUL  shift, and go to state 66

    $default  reduce using rule 57 (EXP)


state 90

   61 TERM: TERM DIV POWER .

    $default  reduce using rule 61 (TERM)


state 91

   60 TERM: TERM MUL POWER .

    $default  reduce using rule 60 (TERM)


state 92

   63 POWER: FACTOR POW POWER .

    $default  reduce using rule 63 (POWER)


state 93

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 103


state 94

   46 ASSIGNMENT_FORLOOP: ID ASSIGN . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 104
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 95

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 105
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 96

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE $@7 STMTS RBRACE

    LBRACE  shift, and go to state 106


state 97

    1 STMTS: STMTS . STMT
   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 107
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 98

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE $@11 STMTS RBRACE

    LBRACE  shift, and go to state 108


state 99

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN . LBRACE $@3 SWITCH_CASE RBRACE

    LBRACE  shift, and go to state 109


state 100

   19 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 19 (CONST_DECLARATION)


state 101

   45 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 45 (ASSIGNMENT)


state 102

   42 MATCHED_IF: UNMATCHED_IF ELSE LBRACE $@10 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 110
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 103

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 104

   46 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP .

    $default  reduce using rule 46 (ASSIGNMENT_FORLOOP)


state 105

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    SEMICOLON  shift, and go to state 111


state 106

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . $@7 STMTS RBRACE

    $default  reduce using rule 36 ($@7)

    $@7  go to state 112


state 107

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    UNTIL  shift, and go to state 113


state 108

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . $@11 STMTS RBRACE

    $default  reduce using rule 43 ($@11)

    $@11  go to state 114


state 109

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE . $@3 SWITCH_CASE RBRACE

    $default  reduce using rule 23 ($@3)

    $@3  go to state 115


state 110

    1 STMTS: STMTS . STMT
   42 MATCHED_IF: UNMATCHED_IF ELSE LBRACE $@10 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 116
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 111

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE

    ID  shift, and go to state 70

    ASSIGNMENT_FORLOOP  go to state 117


state 112

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@7 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 118
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 113

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON

    LPAREN  shift, and go to state 119


state 114

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 120
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 115

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 . SWITCH_CASE RBRACE

    CASE     shift, and go to state 121
    DEFAULT  shift, and go to state 122

    SWITCH_CASE   go to state 123
    CASE_STMTS    go to state 124
    CASE_STMT     go to state 125
    DEFAULT_STMT  go to state 126


state 116

   42 MATCHED_IF: UNMATCHED_IF ELSE LBRACE $@10 STMTS RBRACE .

    $default  reduce using rule 42 (MATCHED_IF)


state 117

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP . RPAREN LBRACE $@6 STMTS RBRACE

    RPAREN  shift, and go to state 127


state 118

    1 STMTS: STMTS . STMT
   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 128
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 119

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP $@9 RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 9
    INTEGER  shift, and go to state 15
    FLOAT    shift, and go to state 16
    CHAR     shift, and go to state 17
    ID       shift, and go to state 38

    LOGICAL_EXP  go to state 129
    REL_EXP      go to state 33
    EXP          go to state 34
    TERM         go to state 35
    POWER        go to state 36
    FACTOR       go to state 37


state 120

    1 STMTS: STMTS . STMT
   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 130
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 121

   32 CASE_STMT: CASE . INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON

    INTEGER  shift, and go to state 131


state 122

   33 DEFAULT_STMT: DEFAULT . COLON STMTS BREAK SEMICOLON

    COLON  shift, and go to state 132


state 123

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE . RBRACE

    RBRACE  shift, and go to state 133


state 124

   25 SWITCH_CASE: CASE_STMTS .
   26            | CASE_STMTS . DEFAULT_STMT
   29 CASE_STMTS: CASE_STMTS . CASE_STMT

    CASE     shift, and go to state 121
    DEFAULT  shift, and go to state 122

    $default  reduce using rule 25 (SWITCH_CASE)

    CASE_STMT     go to state 134
    DEFAULT_STMT  go to state 135


state 125

   28 CASE_STMTS: CASE_STMT .

    $default  reduce using rule 28 (CASE_STMTS)


state 126

   27 SWITCH_CASE: DEFAULT_STMT .

    $default  reduce using rule 27 (SWITCH_CASE)


state 127

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN . LBRACE $@6 STMTS RBRACE

    LBRACE  shift, and go to state 136


state 128

   37 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@7 STMTS RBRACE .

    $default  reduce using rule 37 (WHILE_LOOP)


state 129

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . $@9 RPAREN SEMICOLON

    $default  reduce using rule 39 ($@9)

    $@9  go to state 137


state 130

   44 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE $@11 STMTS RBRACE .

    $default  reduce using rule 44 (UNMATCHED_IF)


state 131

   32 CASE_STMT: CASE INTEGER . COLON $@4 STMTS $@5 BREAK SEMICOLON

    COLON  shift, and go to state 138


state 132

   33 DEFAULT_STMT: DEFAULT COLON . STMTS BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 139
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 133

   24 SWITCH_BLOCK: SWITCH LPAREN ID RPAREN LBRACE $@3 SWITCH_CASE RBRACE .

    $default  reduce using rule 24 (SWITCH_BLOCK)


state 134

   29 CASE_STMTS: CASE_STMTS CASE_STMT .

    $default  reduce using rule 29 (CASE_STMTS)


state 135

   26 SWITCH_CASE: CASE_STMTS DEFAULT_STMT .

    $default  reduce using rule 26 (SWITCH_CASE)


state 136

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE . $@6 STMTS RBRACE

    $default  reduce using rule 34 ($@6)

    $@6  go to state 140


state 137

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 . RPAREN SEMICOLON

    RPAREN  shift, and go to state 141


state 138

   32 CASE_STMT: CASE INTEGER COLON . $@4 STMTS $@5 BREAK SEMICOLON

    $default  reduce using rule 30 ($@4)

    $@4  go to state 142


state 139

    1 STMTS: STMTS . STMT
   33 DEFAULT_STMT: DEFAULT COLON STMTS . BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    BREAK       shift, and go to state 143
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 140

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 144
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 141

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 145


state 142

   32 CASE_STMT: CASE INTEGER COLON $@4 . STMTS $@5 BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    ERROR       shift, and go to state 14
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    STMTS              go to state 146
    BLOCK              go to state 20
    STMT               go to state 21
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 143

   33 DEFAULT_STMT: DEFAULT COLON STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 144

    1 STMTS: STMTS . STMT
   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 148
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 145

   40 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@8 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@9 RPAREN SEMICOLON .

    $default  reduce using rule 40 (REPEAT_UNTIL_LOOP)


state 146

    1 STMTS: STMTS . STMT
   32 CASE_STMT: CASE INTEGER COLON $@4 STMTS . $@5 BREAK SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    SUB         shift, and go to state 9
    INT_TYPE    shift, and go to state 10
    FLOAT_TYPE  shift, and go to state 11
    CHAR_TYPE   shift, and go to state 12
    CONST       shift, and go to state 13
    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    CHAR        shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 31 ($@5)

    BLOCK              go to state 20
    STMT               go to state 51
    DECLARATION        go to state 22
    CONST_DECLARATION  go to state 23
    PARAM_TYPE         go to state 24
    SWITCH_BLOCK       go to state 25
    $@5                go to state 149
    FOR_LOOP           go to state 26
    WHILE_LOOP         go to state 27
    REPEAT_UNTIL_LOOP  go to state 28
    MATCHED_IF         go to state 29
    UNMATCHED_IF       go to state 30
    ASSIGNMENT         go to state 31
    LOGICAL_EXP        go to state 32
    REL_EXP            go to state 33
    EXP                go to state 34
    TERM               go to state 35
    POWER              go to state 36
    FACTOR             go to state 37


state 147

   33 DEFAULT_STMT: DEFAULT COLON STMTS BREAK SEMICOLON .

    $default  reduce using rule 33 (DEFAULT_STMT)


state 148

   35 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@6 STMTS RBRACE .

    $default  reduce using rule 35 (FOR_LOOP)


state 149

   32 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 . BREAK SEMICOLON

    BREAK  shift, and go to state 150


state 150

   32 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 151

   32 CASE_STMT: CASE INTEGER COLON $@4 STMTS $@5 BREAK SEMICOLON .

    $default  reduce using rule 32 (CASE_STMT)
