Terminals unused in grammar

   COLON
   FOR
   WHILE
   REPEAT
   UNTIL
   IF
   ELSE
   SWITCH
   CASE
   BREAK
   DEFAULT
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: BLOCK
    8     | DECLARATION
    9     | CONST_DECLARATION
   10     | ASSIGNMENT
   11     | LOGICAL_EXP SEMICOLON

   12 DECLARATION: PARAM_TYPE ID SEMICOLON

   13 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   14 PARAM_TYPE: INT_TYPE
   15           | FLOAT_TYPE
   16           | CHAR_TYPE

   17 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   18 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   19            | REL_EXP AND LOGICAL_EXP
   20            | REL_EXP

   21 REL_EXP: EXP EQ EXP
   22        | EXP NE EXP
   23        | EXP LT EXP
   24        | EXP LE EXP
   25        | EXP GT EXP
   26        | EXP GE EXP
   27        | EXP

   28 EXP: EXP ADD TERM
   29    | EXP SUB TERM
   30    | TERM

   31 TERM: TERM MUL POWER
   32     | TERM DIV POWER
   33     | POWER

   34 POWER: FACTOR POW POWER
   35      | FACTOR

   36 FACTOR: LPAREN LOGICAL_EXP RPAREN
   37       | SUB FACTOR
   38       | NOT FACTOR
   39       | INTEGER
   40       | FLOAT
   41       | CHAR
   42       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 34
NOT (259) 38
OR (260) 18
AND (261) 19
EQ (262) 21
NE (263) 22
LT (264) 23
LE (265) 24
GT (266) 25
GE (267) 26
ASSIGN (268) 17
LPAREN (269) 36
RPAREN (270) 36
LBRACE (271) 6
RBRACE (272) 6
SEMICOLON (273) 11 12 13 17
COLON (274)
FOR (275)
WHILE (276)
REPEAT (277)
UNTIL (278)
IF (279)
ELSE (280)
SWITCH (281)
CASE (282)
BREAK (283)
DEFAULT (284)
SUB (285) 29 37
ADD (286) 28
DIV (287) 32
MUL (288) 31
INT_TYPE (289) 14
FLOAT_TYPE (290) 15
CHAR_TYPE (291) 16
VOID_TYPE (292)
CONST (293) 13
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 39
FLOAT (298) 40
CHAR (299) 41
ID (300) 12 13 17 42


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6
BLOCK (48)
    on left: 6, on right: 7
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11, on right: 1 2
DECLARATION (52)
    on left: 12, on right: 8
CONST_DECLARATION (53)
    on left: 13, on right: 9
PARAM_TYPE (54)
    on left: 14 15 16, on right: 12 13
ASSIGNMENT (55)
    on left: 17, on right: 10
LOGICAL_EXP (56)
    on left: 18 19 20, on right: 11 17 18 19 36
REL_EXP (57)
    on left: 21 22 23 24 25 26 27, on right: 18 19 20
EXP (58)
    on left: 28 29 30, on right: 21 22 23 24 25 26 27 28 29
TERM (59)
    on left: 31 32 33, on right: 28 29 30 31 32
POWER (60)
    on left: 34 35, on right: 31 32 33 34
FACTOR (61)
    on left: 36 37 38 39 40 41 42, on right: 34 35 37 38


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4
    INT_TYPE    shift, and go to state 5
    FLOAT_TYPE  shift, and go to state 6
    CHAR_TYPE   shift, and go to state 7
    CONST       shift, and go to state 8
    ERROR       shift, and go to state 9
    INTEGER     shift, and go to state 10
    FLOAT       shift, and go to state 11
    CHAR        shift, and go to state 12
    ID          shift, and go to state 13

    STMTS              go to state 14
    BLOCK              go to state 15
    STMT               go to state 16
    DECLARATION        go to state 17
    CONST_DECLARATION  go to state 18
    PARAM_TYPE         go to state 19
    ASSIGNMENT         go to state 20
    LOGICAL_EXP        go to state 21
    REL_EXP            go to state 22
    EXP                go to state 23
    TERM               go to state 24
    POWER              go to state 25
    FACTOR             go to state 26


state 1

   38 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    FACTOR  go to state 28


state 2

   36 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    LOGICAL_EXP  go to state 29
    REL_EXP      go to state 22
    EXP          go to state 23
    TERM         go to state 24
    POWER        go to state 25
    FACTOR       go to state 26


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 30


state 4

   37 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    FACTOR  go to state 31


state 5

   14 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 14 (PARAM_TYPE)


state 6

   15 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 15 (PARAM_TYPE)


state 7

   16 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 16 (PARAM_TYPE)


state 8

   13 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 5
    FLOAT_TYPE  shift, and go to state 6
    CHAR_TYPE   shift, and go to state 7

    PARAM_TYPE  go to state 32


state 9

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 10

   39 FACTOR: INTEGER .

    $default  reduce using rule 39 (FACTOR)


state 11

   40 FACTOR: FLOAT .

    $default  reduce using rule 40 (FACTOR)


state 12

   41 FACTOR: CHAR .

    $default  reduce using rule 41 (FACTOR)


state 13

   17 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   42 FACTOR: ID .

    ASSIGN  shift, and go to state 33

    $default  reduce using rule 42 (FACTOR)


state 14

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 34
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4
    INT_TYPE    shift, and go to state 5
    FLOAT_TYPE  shift, and go to state 6
    CHAR_TYPE   shift, and go to state 7
    CONST       shift, and go to state 8
    INTEGER     shift, and go to state 10
    FLOAT       shift, and go to state 11
    CHAR        shift, and go to state 12
    ID          shift, and go to state 13

    BLOCK              go to state 15
    STMT               go to state 35
    DECLARATION        go to state 17
    CONST_DECLARATION  go to state 18
    PARAM_TYPE         go to state 19
    ASSIGNMENT         go to state 20
    LOGICAL_EXP        go to state 21
    REL_EXP            go to state 22
    EXP                go to state 23
    TERM               go to state 24
    POWER              go to state 25
    FACTOR             go to state 26


state 15

    7 STMT: BLOCK .

    $default  reduce using rule 7 (STMT)


state 16

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 17

    8 STMT: DECLARATION .

    $default  reduce using rule 8 (STMT)


state 18

    9 STMT: CONST_DECLARATION .

    $default  reduce using rule 9 (STMT)


state 19

   12 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 36


state 20

   10 STMT: ASSIGNMENT .

    $default  reduce using rule 10 (STMT)


state 21

   11 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 37


state 22

   18 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   19            | REL_EXP . AND LOGICAL_EXP
   20            | REL_EXP .

    OR   shift, and go to state 38
    AND  shift, and go to state 39

    $default  reduce using rule 20 (LOGICAL_EXP)


state 23

   21 REL_EXP: EXP . EQ EXP
   22        | EXP . NE EXP
   23        | EXP . LT EXP
   24        | EXP . LE EXP
   25        | EXP . GT EXP
   26        | EXP . GE EXP
   27        | EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    EQ   shift, and go to state 40
    NE   shift, and go to state 41
    LT   shift, and go to state 42
    LE   shift, and go to state 43
    GT   shift, and go to state 44
    GE   shift, and go to state 45
    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 27 (REL_EXP)


state 24

   30 EXP: TERM .
   31 TERM: TERM . MUL POWER
   32     | TERM . DIV POWER

    DIV  shift, and go to state 48
    MUL  shift, and go to state 49

    $default  reduce using rule 30 (EXP)


state 25

   33 TERM: POWER .

    $default  reduce using rule 33 (TERM)


state 26

   34 POWER: FACTOR . POW POWER
   35      | FACTOR .

    POW  shift, and go to state 50

    $default  reduce using rule 35 (POWER)


state 27

   42 FACTOR: ID .

    $default  reduce using rule 42 (FACTOR)


state 28

   38 FACTOR: NOT FACTOR .

    $default  reduce using rule 38 (FACTOR)


state 29

   36 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 51


state 30

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4
    INT_TYPE    shift, and go to state 5
    FLOAT_TYPE  shift, and go to state 6
    CHAR_TYPE   shift, and go to state 7
    CONST       shift, and go to state 8
    ERROR       shift, and go to state 9
    INTEGER     shift, and go to state 10
    FLOAT       shift, and go to state 11
    CHAR        shift, and go to state 12
    ID          shift, and go to state 13

    STMTS              go to state 52
    BLOCK              go to state 15
    STMT               go to state 16
    DECLARATION        go to state 17
    CONST_DECLARATION  go to state 18
    PARAM_TYPE         go to state 19
    ASSIGNMENT         go to state 20
    LOGICAL_EXP        go to state 21
    REL_EXP            go to state 22
    EXP                go to state 23
    TERM               go to state 24
    POWER              go to state 25
    FACTOR             go to state 26


state 31

   37 FACTOR: SUB FACTOR .

    $default  reduce using rule 37 (FACTOR)


state 32

   13 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 53


state 33

   17 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    LOGICAL_EXP  go to state 54
    REL_EXP      go to state 22
    EXP          go to state 23
    TERM         go to state 24
    POWER        go to state 25
    FACTOR       go to state 26


state 34

    0 $accept: STMTS $end .

    $default  accept


state 35

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 36

   12 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 37

   11 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 11 (STMT)


state 38

   18 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    LOGICAL_EXP  go to state 56
    REL_EXP      go to state 22
    EXP          go to state 23
    TERM         go to state 24
    POWER        go to state 25
    FACTOR       go to state 26


state 39

   19 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    LOGICAL_EXP  go to state 57
    REL_EXP      go to state 22
    EXP          go to state 23
    TERM         go to state 24
    POWER        go to state 25
    FACTOR       go to state 26


state 40

   21 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 58
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 41

   22 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 59
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 42

   23 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 60
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 43

   24 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 61
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 44

   25 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 62
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 45

   26 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    EXP     go to state 63
    TERM    go to state 24
    POWER   go to state 25
    FACTOR  go to state 26


state 46

   29 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    TERM    go to state 64
    POWER   go to state 25
    FACTOR  go to state 26


state 47

   28 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    TERM    go to state 65
    POWER   go to state 25
    FACTOR  go to state 26


state 48

   32 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    POWER   go to state 66
    FACTOR  go to state 26


state 49

   31 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    POWER   go to state 67
    FACTOR  go to state 26


state 50

   34 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 4
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 27

    POWER   go to state 68
    FACTOR  go to state 26


state 51

   36 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 36 (FACTOR)


state 52

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 69
    SUB         shift, and go to state 4
    INT_TYPE    shift, and go to state 5
    FLOAT_TYPE  shift, and go to state 6
    CHAR_TYPE   shift, and go to state 7
    CONST       shift, and go to state 8
    INTEGER     shift, and go to state 10
    FLOAT       shift, and go to state 11
    CHAR        shift, and go to state 12
    ID          shift, and go to state 13

    BLOCK              go to state 15
    STMT               go to state 35
    DECLARATION        go to state 17
    CONST_DECLARATION  go to state 18
    PARAM_TYPE         go to state 19
    ASSIGNMENT         go to state 20
    LOGICAL_EXP        go to state 21
    REL_EXP            go to state 22
    EXP                go to state 23
    TERM               go to state 24
    POWER              go to state 25
    FACTOR             go to state 26


state 53

   13 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 70


state 54

   17 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 71


state 55

   12 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 12 (DECLARATION)


state 56

   18 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 18 (LOGICAL_EXP)


state 57

   19 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 19 (LOGICAL_EXP)


state 58

   21 REL_EXP: EXP EQ EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 21 (REL_EXP)


state 59

   22 REL_EXP: EXP NE EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 22 (REL_EXP)


state 60

   23 REL_EXP: EXP LT EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 23 (REL_EXP)


state 61

   24 REL_EXP: EXP LE EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 24 (REL_EXP)


state 62

   25 REL_EXP: EXP GT EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 25 (REL_EXP)


state 63

   26 REL_EXP: EXP GE EXP .
   28 EXP: EXP . ADD TERM
   29    | EXP . SUB TERM

    SUB  shift, and go to state 46
    ADD  shift, and go to state 47

    $default  reduce using rule 26 (REL_EXP)


state 64

   29 EXP: EXP SUB TERM .
   31 TERM: TERM . MUL POWER
   32     | TERM . DIV POWER

    DIV  shift, and go to state 48
    MUL  shift, and go to state 49

    $default  reduce using rule 29 (EXP)


state 65

   28 EXP: EXP ADD TERM .
   31 TERM: TERM . MUL POWER
   32     | TERM . DIV POWER

    DIV  shift, and go to state 48
    MUL  shift, and go to state 49

    $default  reduce using rule 28 (EXP)


state 66

   32 TERM: TERM DIV POWER .

    $default  reduce using rule 32 (TERM)


state 67

   31 TERM: TERM MUL POWER .

    $default  reduce using rule 31 (TERM)


state 68

   34 POWER: FACTOR POW POWER .

    $default  reduce using rule 34 (POWER)


state 69

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 72


state 70

   13 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 13 (CONST_DECLARATION)


state 71

   17 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 17 (ASSIGNMENT)


state 72

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)
