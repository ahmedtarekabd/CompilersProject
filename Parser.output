Terminals unused in grammar

   POW


State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 STMT: MATCHED_IF
    5     | UNMATCHED_IF
    6     | SWITCH_CASE
    7     | FOR_LOOP
    8     | WHILE_LOOP
    9     | REPEAT_UNTIL_LOOP
   10     | ASSIGNMENT SEMICOLON
   11     | LOGICAL_EXP SEMICOLON

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

   13 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON
   14             | /* empty */

   15 CASES: CASES CASE_BLOCK
   16      | CASE_BLOCK

   17 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON

   18 CASE_STMTS: STMTS
   19           | /* empty */

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE

   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   26             | IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

   27 ASSIGNMENT: ID ASSIGN EXP

   28 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   29            | REL_EXP AND LOGICAL_EXP
   30            | REL_EXP

   31 REL_EXP: EXP EQ EXP
   32        | EXP NE EXP
   33        | EXP LT EXP
   34        | EXP LE EXP
   35        | EXP GT EXP
   36        | EXP GE EXP
   37        | EXP

   38 EXP: EXP ADD TERM
   39    | EXP SUB TERM
   40    | TERM

   41 TERM: TERM MUL FACTOR
   42     | TERM DIV FACTOR
   43     | FACTOR

   44 FACTOR: LPAREN LOGICAL_EXP RPAREN
   45       | SUB FACTOR
   46       | NOT FACTOR
   47       | INTEGER
   48       | FLOAT
   49       | CHAR
   50       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258)
NOT (259) 46
OR (260) 28
AND (261) 29
EQ (262) 31
NE (263) 32
LT (264) 33
LE (265) 34
GT (266) 35
GE (267) 36
ASSIGN (268) 27
LPAREN (269) 12 20 21 22 23 24 25 26 44
RPAREN (270) 12 20 21 22 23 24 25 26 44
LBRACE (271) 12 20 21 22 23 24 25 26
RBRACE (272) 12 20 21 22 23 24 25 26
SEMICOLON (273) 10 11 13 17 20 22
COLON (274) 13 17
FOR (275) 20
WHILE (276) 21
REPEAT (277) 22
UNTIL (278) 22
IF (279) 23 24 25 26
ELSE (280) 23 24 26
SWITCH (281) 12
CASE (282) 17
BREAK (283) 13 17
DEFAULT (284) 13
SUB (285) 39 45
ADD (286) 38
DIV (287) 42
MUL (288) 41
ERROR (289) 3
INTEGER (290) 17 47
FLOAT (291) 48
CHAR (292) 49
ID (293) 12 27 50


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
STMTS (40)
    on left: 1 2 3, on right: 0 1 13 18 20 21 22
STMT (41)
    on left: 4 5 6 7 8 9 10 11, on right: 1 2 24 25
SWITCH_CASE (42)
    on left: 12, on right: 6
CASE_DEFAULT (43)
    on left: 13 14, on right: 12
CASES (44)
    on left: 15 16, on right: 12 15
CASE_BLOCK (45)
    on left: 17, on right: 15 16
CASE_STMTS (46)
    on left: 18 19, on right: 17
FOR_LOOP (47)
    on left: 20, on right: 7
WHILE_LOOP (48)
    on left: 21, on right: 8
REPEAT_UNTIL_LOOP (49)
    on left: 22, on right: 9
MATCHED_IF (50)
    on left: 23 24, on right: 4 23 26
UNMATCHED_IF (51)
    on left: 25 26, on right: 5 26
ASSIGNMENT (52)
    on left: 27, on right: 10 20
LOGICAL_EXP (53)
    on left: 28 29 30, on right: 11 20 21 22 23 24 25 26 28 29 44
REL_EXP (54)
    on left: 31 32 33 34 35 36 37, on right: 28 29 30
EXP (55)
    on left: 38 39 40, on right: 27 31 32 33 34 35 36 37 38 39
TERM (56)
    on left: 41 42 43, on right: 38 39 40 41 42
FACTOR (57)
    on left: 44 45 46 47 48 49 50, on right: 41 42 43 45 46


state 0

    0 $accept: . STMTS $end

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMTS              go to state 14
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 1

   46 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    FACTOR  go to state 29


state 2

   44 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 30
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 3

   20 FOR_LOOP: FOR . LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 31


state 4

   21 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    LPAREN  shift, and go to state 32


state 5

   22 REPEAT_UNTIL_LOOP: REPEAT . LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LBRACE  shift, and go to state 33


state 6

   23 MATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF . LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   26             | IF . LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LPAREN  shift, and go to state 34


state 7

   12 SWITCH_CASE: SWITCH . LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    LPAREN  shift, and go to state 35


state 8

   45 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    FACTOR  go to state 36


state 9

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 10

   47 FACTOR: INTEGER .

    $default  reduce using rule 47 (FACTOR)


state 11

   48 FACTOR: FLOAT .

    $default  reduce using rule 48 (FACTOR)


state 12

   49 FACTOR: CHAR .

    $default  reduce using rule 49 (FACTOR)


state 13

   27 ASSIGNMENT: ID . ASSIGN EXP
   50 FACTOR: ID .

    ASSIGN  shift, and go to state 37

    $default  reduce using rule 50 (FACTOR)


state 14

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end     shift, and go to state 38
    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 15

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 16

    6 STMT: SWITCH_CASE .

    $default  reduce using rule 6 (STMT)


state 17

    7 STMT: FOR_LOOP .

    $default  reduce using rule 7 (STMT)


state 18

    8 STMT: WHILE_LOOP .

    $default  reduce using rule 8 (STMT)


state 19

    9 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 9 (STMT)


state 20

    4 STMT: MATCHED_IF .

    $default  reduce using rule 4 (STMT)


state 21

    5 STMT: UNMATCHED_IF .

    $default  reduce using rule 5 (STMT)


state 22

   10 STMT: ASSIGNMENT . SEMICOLON

    SEMICOLON  shift, and go to state 40


state 23

   11 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 41


state 24

   28 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   29            | REL_EXP . AND LOGICAL_EXP
   30            | REL_EXP .

    OR   shift, and go to state 42
    AND  shift, and go to state 43

    $default  reduce using rule 30 (LOGICAL_EXP)


state 25

   31 REL_EXP: EXP . EQ EXP
   32        | EXP . NE EXP
   33        | EXP . LT EXP
   34        | EXP . LE EXP
   35        | EXP . GT EXP
   36        | EXP . GE EXP
   37        | EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    LT   shift, and go to state 46
    LE   shift, and go to state 47
    GT   shift, and go to state 48
    GE   shift, and go to state 49
    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 37 (REL_EXP)


state 26

   40 EXP: TERM .
   41 TERM: TERM . MUL FACTOR
   42     | TERM . DIV FACTOR

    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 40 (EXP)


state 27

   43 TERM: FACTOR .

    $default  reduce using rule 43 (TERM)


state 28

   50 FACTOR: ID .

    $default  reduce using rule 50 (FACTOR)


state 29

   46 FACTOR: NOT FACTOR .

    $default  reduce using rule 46 (FACTOR)


state 30

   44 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 54


state 31

   20 FOR_LOOP: FOR LPAREN . ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 55

    ASSIGNMENT  go to state 56


state 32

   21 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 57
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 33

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMTS              go to state 58
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 34

   23 MATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN . LOGICAL_EXP RPAREN LBRACE STMT RBRACE
   26             | IF LPAREN . LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 59
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 35

   12 SWITCH_CASE: SWITCH LPAREN . ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    ID  shift, and go to state 60


state 36

   45 FACTOR: SUB FACTOR .

    $default  reduce using rule 45 (FACTOR)


state 37

   27 ASSIGNMENT: ID ASSIGN . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 61
    TERM    go to state 26
    FACTOR  go to state 27


state 38

    0 $accept: STMTS $end .

    $default  accept


state 39

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 40

   10 STMT: ASSIGNMENT SEMICOLON .

    $default  reduce using rule 10 (STMT)


state 41

   11 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 11 (STMT)


state 42

   28 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 62
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 43

   29 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 63
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 44

   31 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 64
    TERM    go to state 26
    FACTOR  go to state 27


state 45

   32 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 65
    TERM    go to state 26
    FACTOR  go to state 27


state 46

   33 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 66
    TERM    go to state 26
    FACTOR  go to state 27


state 47

   34 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 67
    TERM    go to state 26
    FACTOR  go to state 27


state 48

   35 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 68
    TERM    go to state 26
    FACTOR  go to state 27


state 49

   36 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    EXP     go to state 69
    TERM    go to state 26
    FACTOR  go to state 27


state 50

   39 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    TERM    go to state 70
    FACTOR  go to state 27


state 51

   38 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    TERM    go to state 71
    FACTOR  go to state 27


state 52

   42 TERM: TERM DIV . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    FACTOR  go to state 72


state 53

   41 TERM: TERM MUL . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    FACTOR  go to state 73


state 54

   44 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 44 (FACTOR)


state 55

   27 ASSIGNMENT: ID . ASSIGN EXP

    ASSIGN  shift, and go to state 37


state 56

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 74


state 57

   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 75


state 58

    1 STMTS: STMTS . STMT
   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    RBRACE   shift, and go to state 76
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 59

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP . RPAREN LBRACE STMT RBRACE
   26             | IF LPAREN LOGICAL_EXP . RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RPAREN  shift, and go to state 77


state 60

   12 SWITCH_CASE: SWITCH LPAREN ID . RPAREN LBRACE CASES CASE_DEFAULT RBRACE

    RPAREN  shift, and go to state 78


state 61

   27 ASSIGNMENT: ID ASSIGN EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 27 (ASSIGNMENT)


state 62

   28 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 28 (LOGICAL_EXP)


state 63

   29 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 29 (LOGICAL_EXP)


state 64

   31 REL_EXP: EXP EQ EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 31 (REL_EXP)


state 65

   32 REL_EXP: EXP NE EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 32 (REL_EXP)


state 66

   33 REL_EXP: EXP LT EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 33 (REL_EXP)


state 67

   34 REL_EXP: EXP LE EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 34 (REL_EXP)


state 68

   35 REL_EXP: EXP GT EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 35 (REL_EXP)


state 69

   36 REL_EXP: EXP GE EXP .
   38 EXP: EXP . ADD TERM
   39    | EXP . SUB TERM

    SUB  shift, and go to state 50
    ADD  shift, and go to state 51

    $default  reduce using rule 36 (REL_EXP)


state 70

   39 EXP: EXP SUB TERM .
   41 TERM: TERM . MUL FACTOR
   42     | TERM . DIV FACTOR

    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 39 (EXP)


state 71

   38 EXP: EXP ADD TERM .
   41 TERM: TERM . MUL FACTOR
   42     | TERM . DIV FACTOR

    DIV  shift, and go to state 52
    MUL  shift, and go to state 53

    $default  reduce using rule 38 (EXP)


state 72

   42 TERM: TERM DIV FACTOR .

    $default  reduce using rule 42 (TERM)


state 73

   41 TERM: TERM MUL FACTOR .

    $default  reduce using rule 41 (TERM)


state 74

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 79
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 75

   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 80


state 76

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON

    UNTIL  shift, and go to state 81


state 77

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN . LBRACE STMT RBRACE
   26             | IF LPAREN LOGICAL_EXP RPAREN . LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 82


state 78

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN . LBRACE CASES CASE_DEFAULT RBRACE

    LBRACE  shift, and go to state 83


state 79

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    SEMICOLON  shift, and go to state 84


state 80

   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMTS              go to state 85
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 81

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP RPAREN SEMICOLON

    LPAREN  shift, and go to state 86


state 82

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE
   24           | IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE . STMT RBRACE
   26             | IF LPAREN LOGICAL_EXP RPAREN LBRACE . MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 87
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 88
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 83

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE . CASES CASE_DEFAULT RBRACE

    CASE  shift, and go to state 89

    CASES       go to state 90
    CASE_BLOCK  go to state 91


state 84

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT RPAREN LBRACE STMTS RBRACE

    ID  shift, and go to state 55

    ASSIGNMENT  go to state 92


state 85

    1 STMTS: STMTS . STMT
   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS . RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    RBRACE   shift, and go to state 93
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 86

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 28

    LOGICAL_EXP  go to state 94
    REL_EXP      go to state 24
    EXP          go to state 25
    TERM         go to state 26
    FACTOR       go to state 27


state 87

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 95


state 88

    4 STMT: MATCHED_IF .
   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE MATCHED_IF RBRACE
   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF . RBRACE ELSE LBRACE UNMATCHED_IF RBRACE

    RBRACE  shift, and go to state 96

    RBRACE  [reduce using rule 4 (STMT)]


state 89

   17 CASE_BLOCK: CASE . INTEGER COLON CASE_STMTS BREAK SEMICOLON

    INTEGER  shift, and go to state 97


state 90

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES . CASE_DEFAULT RBRACE
   15 CASES: CASES . CASE_BLOCK

    CASE     shift, and go to state 89
    DEFAULT  shift, and go to state 98

    $default  reduce using rule 14 (CASE_DEFAULT)

    CASE_DEFAULT  go to state 99
    CASE_BLOCK    go to state 100


state 91

   16 CASES: CASE_BLOCK .

    $default  reduce using rule 16 (CASES)


state 92

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT . RPAREN LBRACE STMTS RBRACE

    RPAREN  shift, and go to state 101


state 93

   21 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 21 (WHILE_LOOP)


state 94

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . RPAREN SEMICOLON

    RPAREN  shift, and go to state 102


state 95

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE . ELSE LBRACE STMT RBRACE
   25 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE .

    ELSE  shift, and go to state 103

    $default  reduce using rule 25 (UNMATCHED_IF)


state 96

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE MATCHED_IF RBRACE
   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE . ELSE LBRACE UNMATCHED_IF RBRACE

    ELSE  shift, and go to state 104


state 97

   17 CASE_BLOCK: CASE INTEGER . COLON CASE_STMTS BREAK SEMICOLON

    COLON  shift, and go to state 105


state 98

   13 CASE_DEFAULT: DEFAULT . COLON STMTS BREAK SEMICOLON

    COLON  shift, and go to state 106


state 99

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT . RBRACE

    RBRACE  shift, and go to state 107


state 100

   15 CASES: CASES CASE_BLOCK .

    $default  reduce using rule 15 (CASES)


state 101

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN . LBRACE STMTS RBRACE

    LBRACE  shift, and go to state 108


state 102

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 103

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE . LBRACE STMT RBRACE

    LBRACE  shift, and go to state 110


state 104

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE MATCHED_IF RBRACE
   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE . LBRACE UNMATCHED_IF RBRACE

    LBRACE  shift, and go to state 111


state 105

   17 CASE_BLOCK: CASE INTEGER COLON . CASE_STMTS BREAK SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    $default  reduce using rule 19 (CASE_STMTS)

    STMTS              go to state 112
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    CASE_STMTS         go to state 113
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 106

   13 CASE_DEFAULT: DEFAULT COLON . STMTS BREAK SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMTS              go to state 114
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 107

   12 SWITCH_CASE: SWITCH LPAREN ID RPAREN LBRACE CASES CASE_DEFAULT RBRACE .

    $default  reduce using rule 12 (SWITCH_CASE)


state 108

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE . STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    ERROR    shift, and go to state 9
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMTS              go to state 115
    STMT               go to state 15
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 109

   22 REPEAT_UNTIL_LOOP: REPEAT LBRACE STMTS RBRACE UNTIL LPAREN LOGICAL_EXP RPAREN SEMICOLON .

    $default  reduce using rule 22 (REPEAT_UNTIL_LOOP)


state 110

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE . STMT RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 116
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 111

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . MATCHED_IF RBRACE
   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE . UNMATCHED_IF RBRACE

    IF  shift, and go to state 6

    MATCHED_IF    go to state 117
    UNMATCHED_IF  go to state 118


state 112

    1 STMTS: STMTS . STMT
   18 CASE_STMTS: STMTS .

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    $default  reduce using rule 18 (CASE_STMTS)

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 113

   17 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS . BREAK SEMICOLON

    BREAK  shift, and go to state 119


state 114

    1 STMTS: STMTS . STMT
   13 CASE_DEFAULT: DEFAULT COLON STMTS . BREAK SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    BREAK    shift, and go to state 120
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 115

    1 STMTS: STMTS . STMT
   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS . RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    RBRACE   shift, and go to state 121
    FOR      shift, and go to state 3
    WHILE    shift, and go to state 4
    REPEAT   shift, and go to state 5
    IF       shift, and go to state 6
    SWITCH   shift, and go to state 7
    SUB      shift, and go to state 8
    INTEGER  shift, and go to state 10
    FLOAT    shift, and go to state 11
    CHAR     shift, and go to state 12
    ID       shift, and go to state 13

    STMT               go to state 39
    SWITCH_CASE        go to state 16
    FOR_LOOP           go to state 17
    WHILE_LOOP         go to state 18
    REPEAT_UNTIL_LOOP  go to state 19
    MATCHED_IF         go to state 20
    UNMATCHED_IF       go to state 21
    ASSIGNMENT         go to state 22
    LOGICAL_EXP        go to state 23
    REL_EXP            go to state 24
    EXP                go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


state 116

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT . RBRACE

    RBRACE  shift, and go to state 122


state 117

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF . RBRACE

    RBRACE  shift, and go to state 123


state 118

   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF . RBRACE

    RBRACE  shift, and go to state 124


state 119

   17 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 120

   13 CASE_DEFAULT: DEFAULT COLON STMTS BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 121

   20 FOR_LOOP: FOR LPAREN ASSIGNMENT SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT RPAREN LBRACE STMTS RBRACE .

    $default  reduce using rule 20 (FOR_LOOP)


state 122

   24 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE STMT RBRACE ELSE LBRACE STMT RBRACE .

    $default  reduce using rule 24 (MATCHED_IF)


state 123

   23 MATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE MATCHED_IF RBRACE .

    $default  reduce using rule 23 (MATCHED_IF)


state 124

   26 UNMATCHED_IF: IF LPAREN LOGICAL_EXP RPAREN LBRACE MATCHED_IF RBRACE ELSE LBRACE UNMATCHED_IF RBRACE .

    $default  reduce using rule 26 (UNMATCHED_IF)


state 125

   17 CASE_BLOCK: CASE INTEGER COLON CASE_STMTS BREAK SEMICOLON .

    $default  reduce using rule 17 (CASE_BLOCK)


state 126

   13 CASE_DEFAULT: DEFAULT COLON STMTS BREAK SEMICOLON .

    $default  reduce using rule 13 (CASE_DEFAULT)
