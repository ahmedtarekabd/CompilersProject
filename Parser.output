Terminals unused in grammar

   COLON
   IF
   ELSE
   SWITCH
   CASE
   BREAK
   DEFAULT
   VOID_TYPE
   RETURN
   COMMA


Grammar

    0 $accept: STMTS $end

    1 STMTS: STMTS STMT
    2      | STMT
    3      | ERROR

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2

    7 STMT: BLOCK
    8     | FOR_LOOP
    9     | WHILE_LOOP
   10     | REPEAT_UNTIL_LOOP
   11     | DECLARATION
   12     | CONST_DECLARATION
   13     | ASSIGNMENT
   14     | LOGICAL_EXP SEMICOLON

   15 DECLARATION: PARAM_TYPE ID SEMICOLON

   16 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON

   17 PARAM_TYPE: INT_TYPE
   18           | FLOAT_TYPE
   19           | CHAR_TYPE

   20 $@3: /* empty */

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

   22 $@4: /* empty */

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

   24 $@5: /* empty */

   25 $@6: /* empty */

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

   27 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON

   28 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP

   29 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP
   30            | REL_EXP AND LOGICAL_EXP
   31            | REL_EXP

   32 REL_EXP: EXP EQ EXP
   33        | EXP NE EXP
   34        | EXP LT EXP
   35        | EXP LE EXP
   36        | EXP GT EXP
   37        | EXP GE EXP
   38        | EXP

   39 EXP: EXP ADD TERM
   40    | EXP SUB TERM
   41    | TERM

   42 TERM: TERM MUL POWER
   43     | TERM DIV POWER
   44     | POWER

   45 POWER: FACTOR POW POWER
   46      | FACTOR

   47 FACTOR: LPAREN LOGICAL_EXP RPAREN
   48       | SUB FACTOR
   49       | NOT FACTOR
   50       | INTEGER
   51       | FLOAT
   52       | CHAR
   53       | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
POW (258) 45
NOT (259) 49
OR (260) 29
AND (261) 30
EQ (262) 32
NE (263) 33
LT (264) 34
LE (265) 35
GT (266) 36
GE (267) 37
ASSIGN (268) 27 28
LPAREN (269) 21 23 26 47
RPAREN (270) 21 23 26 47
LBRACE (271) 6 21 23 26
RBRACE (272) 6 21 23 26
SEMICOLON (273) 14 15 16 21 26 27
COLON (274)
FOR (275) 21
WHILE (276) 23
REPEAT (277) 26
UNTIL (278) 26
IF (279)
ELSE (280)
SWITCH (281)
CASE (282)
BREAK (283)
DEFAULT (284)
SUB (285) 40 48
ADD (286) 39
DIV (287) 43
MUL (288) 42
INT_TYPE (289) 17
FLOAT_TYPE (290) 18
CHAR_TYPE (291) 19
VOID_TYPE (292)
CONST (293) 16
RETURN (294)
COMMA (295)
ERROR (296) 3
INTEGER (297) 50
FLOAT (298) 51
CHAR (299) 52
ID (300) 15 16 27 28 53


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
STMTS (47)
    on left: 1 2 3, on right: 0 1 6 21 23 26
BLOCK (48)
    on left: 6, on right: 7
$@1 (49)
    on left: 4, on right: 6
$@2 (50)
    on left: 5, on right: 6
STMT (51)
    on left: 7 8 9 10 11 12 13 14, on right: 1 2
DECLARATION (52)
    on left: 15, on right: 11
CONST_DECLARATION (53)
    on left: 16, on right: 12
PARAM_TYPE (54)
    on left: 17 18 19, on right: 15 16
FOR_LOOP (55)
    on left: 21, on right: 8
$@3 (56)
    on left: 20, on right: 21
WHILE_LOOP (57)
    on left: 23, on right: 9
$@4 (58)
    on left: 22, on right: 23
REPEAT_UNTIL_LOOP (59)
    on left: 26, on right: 10
$@5 (60)
    on left: 24, on right: 26
$@6 (61)
    on left: 25, on right: 26
ASSIGNMENT (62)
    on left: 27, on right: 13
ASSIGNMENT_FORLOOP (63)
    on left: 28, on right: 21
LOGICAL_EXP (64)
    on left: 29 30 31, on right: 14 21 23 26 27 28 29 30 47
REL_EXP (65)
    on left: 32 33 34 35 36 37 38, on right: 29 30 31
EXP (66)
    on left: 39 40 41, on right: 32 33 34 35 36 37 38 39 40
TERM (67)
    on left: 42 43 44, on right: 39 40 41 42 43
POWER (68)
    on left: 45 46, on right: 42 43 44 45
FACTOR (69)
    on left: 47 48 49 50 51 52 53, on right: 45 46 48 49


state 0

    0 $accept: . STMTS $end

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    ERROR       shift, and go to state 12
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    STMTS              go to state 17
    BLOCK              go to state 18
    STMT               go to state 19
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 1

   49 FACTOR: NOT . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    FACTOR  go to state 34


state 2

   47 FACTOR: LPAREN . LOGICAL_EXP RPAREN

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 35
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 3

    6 BLOCK: LBRACE . $@1 STMTS RBRACE $@2

    $default  reduce using rule 4 ($@1)

    $@1  go to state 36


state 4

   21 FOR_LOOP: FOR . LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    LPAREN  shift, and go to state 37


state 5

   23 WHILE_LOOP: WHILE . LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

    LPAREN  shift, and go to state 38


state 6

   26 REPEAT_UNTIL_LOOP: REPEAT . LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    LBRACE  shift, and go to state 39


state 7

   48 FACTOR: SUB . FACTOR

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    FACTOR  go to state 40


state 8

   17 PARAM_TYPE: INT_TYPE .

    $default  reduce using rule 17 (PARAM_TYPE)


state 9

   18 PARAM_TYPE: FLOAT_TYPE .

    $default  reduce using rule 18 (PARAM_TYPE)


state 10

   19 PARAM_TYPE: CHAR_TYPE .

    $default  reduce using rule 19 (PARAM_TYPE)


state 11

   16 CONST_DECLARATION: CONST . PARAM_TYPE ID SEMICOLON

    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10

    PARAM_TYPE  go to state 41


state 12

    3 STMTS: ERROR .

    $default  reduce using rule 3 (STMTS)


state 13

   50 FACTOR: INTEGER .

    $default  reduce using rule 50 (FACTOR)


state 14

   51 FACTOR: FLOAT .

    $default  reduce using rule 51 (FACTOR)


state 15

   52 FACTOR: CHAR .

    $default  reduce using rule 52 (FACTOR)


state 16

   27 ASSIGNMENT: ID . ASSIGN LOGICAL_EXP SEMICOLON
   53 FACTOR: ID .

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 53 (FACTOR)


state 17

    0 $accept: STMTS . $end
    1 STMTS: STMTS . STMT

    $end        shift, and go to state 43
    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    BLOCK              go to state 18
    STMT               go to state 44
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 18

    7 STMT: BLOCK .

    $default  reduce using rule 7 (STMT)


state 19

    2 STMTS: STMT .

    $default  reduce using rule 2 (STMTS)


state 20

   11 STMT: DECLARATION .

    $default  reduce using rule 11 (STMT)


state 21

   12 STMT: CONST_DECLARATION .

    $default  reduce using rule 12 (STMT)


state 22

   15 DECLARATION: PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 45


state 23

    8 STMT: FOR_LOOP .

    $default  reduce using rule 8 (STMT)


state 24

    9 STMT: WHILE_LOOP .

    $default  reduce using rule 9 (STMT)


state 25

   10 STMT: REPEAT_UNTIL_LOOP .

    $default  reduce using rule 10 (STMT)


state 26

   13 STMT: ASSIGNMENT .

    $default  reduce using rule 13 (STMT)


state 27

   14 STMT: LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 46


state 28

   29 LOGICAL_EXP: REL_EXP . OR LOGICAL_EXP
   30            | REL_EXP . AND LOGICAL_EXP
   31            | REL_EXP .

    OR   shift, and go to state 47
    AND  shift, and go to state 48

    $default  reduce using rule 31 (LOGICAL_EXP)


state 29

   32 REL_EXP: EXP . EQ EXP
   33        | EXP . NE EXP
   34        | EXP . LT EXP
   35        | EXP . LE EXP
   36        | EXP . GT EXP
   37        | EXP . GE EXP
   38        | EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    EQ   shift, and go to state 49
    NE   shift, and go to state 50
    LT   shift, and go to state 51
    LE   shift, and go to state 52
    GT   shift, and go to state 53
    GE   shift, and go to state 54
    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 38 (REL_EXP)


state 30

   41 EXP: TERM .
   42 TERM: TERM . MUL POWER
   43     | TERM . DIV POWER

    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    $default  reduce using rule 41 (EXP)


state 31

   44 TERM: POWER .

    $default  reduce using rule 44 (TERM)


state 32

   45 POWER: FACTOR . POW POWER
   46      | FACTOR .

    POW  shift, and go to state 59

    $default  reduce using rule 46 (POWER)


state 33

   53 FACTOR: ID .

    $default  reduce using rule 53 (FACTOR)


state 34

   49 FACTOR: NOT FACTOR .

    $default  reduce using rule 49 (FACTOR)


state 35

   47 FACTOR: LPAREN LOGICAL_EXP . RPAREN

    RPAREN  shift, and go to state 60


state 36

    6 BLOCK: LBRACE $@1 . STMTS RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    ERROR       shift, and go to state 12
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    STMTS              go to state 61
    BLOCK              go to state 18
    STMT               go to state 19
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 37

   21 FOR_LOOP: FOR LPAREN . ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 62

    ASSIGNMENT_FORLOOP  go to state 63


state 38

   23 WHILE_LOOP: WHILE LPAREN . LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 64
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 39

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE . $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    $default  reduce using rule 24 ($@5)

    $@5  go to state 65


state 40

   48 FACTOR: SUB FACTOR .

    $default  reduce using rule 48 (FACTOR)


state 41

   16 CONST_DECLARATION: CONST PARAM_TYPE . ID SEMICOLON

    ID  shift, and go to state 66


state 42

   27 ASSIGNMENT: ID ASSIGN . LOGICAL_EXP SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 67
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 43

    0 $accept: STMTS $end .

    $default  accept


state 44

    1 STMTS: STMTS STMT .

    $default  reduce using rule 1 (STMTS)


state 45

   15 DECLARATION: PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 46

   14 STMT: LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 14 (STMT)


state 47

   29 LOGICAL_EXP: REL_EXP OR . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 69
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 48

   30 LOGICAL_EXP: REL_EXP AND . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 70
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 49

   32 REL_EXP: EXP EQ . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 71
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 50

   33 REL_EXP: EXP NE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 72
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 51

   34 REL_EXP: EXP LT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 73
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 52

   35 REL_EXP: EXP LE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 74
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 53

   36 REL_EXP: EXP GT . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 75
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 54

   37 REL_EXP: EXP GE . EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    EXP     go to state 76
    TERM    go to state 30
    POWER   go to state 31
    FACTOR  go to state 32


state 55

   40 EXP: EXP SUB . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    TERM    go to state 77
    POWER   go to state 31
    FACTOR  go to state 32


state 56

   39 EXP: EXP ADD . TERM

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    TERM    go to state 78
    POWER   go to state 31
    FACTOR  go to state 32


state 57

   43 TERM: TERM DIV . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    POWER   go to state 79
    FACTOR  go to state 32


state 58

   42 TERM: TERM MUL . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    POWER   go to state 80
    FACTOR  go to state 32


state 59

   45 POWER: FACTOR POW . POWER

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    POWER   go to state 81
    FACTOR  go to state 32


state 60

   47 FACTOR: LPAREN LOGICAL_EXP RPAREN .

    $default  reduce using rule 47 (FACTOR)


state 61

    1 STMTS: STMTS . STMT
    6 BLOCK: LBRACE $@1 STMTS . RBRACE $@2

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 82
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    BLOCK              go to state 18
    STMT               go to state 44
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 62

   28 ASSIGNMENT_FORLOOP: ID . ASSIGN LOGICAL_EXP

    ASSIGN  shift, and go to state 83


state 63

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP . SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 84


state 64

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP . RPAREN LBRACE $@4 STMTS RBRACE

    RPAREN  shift, and go to state 85


state 65

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 . STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    ERROR       shift, and go to state 12
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    STMTS              go to state 86
    BLOCK              go to state 18
    STMT               go to state 19
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 66

   16 CONST_DECLARATION: CONST PARAM_TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 87


state 67

   27 ASSIGNMENT: ID ASSIGN LOGICAL_EXP . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 68

   15 DECLARATION: PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 15 (DECLARATION)


state 69

   29 LOGICAL_EXP: REL_EXP OR LOGICAL_EXP .

    $default  reduce using rule 29 (LOGICAL_EXP)


state 70

   30 LOGICAL_EXP: REL_EXP AND LOGICAL_EXP .

    $default  reduce using rule 30 (LOGICAL_EXP)


state 71

   32 REL_EXP: EXP EQ EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 32 (REL_EXP)


state 72

   33 REL_EXP: EXP NE EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 33 (REL_EXP)


state 73

   34 REL_EXP: EXP LT EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 34 (REL_EXP)


state 74

   35 REL_EXP: EXP LE EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 35 (REL_EXP)


state 75

   36 REL_EXP: EXP GT EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 36 (REL_EXP)


state 76

   37 REL_EXP: EXP GE EXP .
   39 EXP: EXP . ADD TERM
   40    | EXP . SUB TERM

    SUB  shift, and go to state 55
    ADD  shift, and go to state 56

    $default  reduce using rule 37 (REL_EXP)


state 77

   40 EXP: EXP SUB TERM .
   42 TERM: TERM . MUL POWER
   43     | TERM . DIV POWER

    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    $default  reduce using rule 40 (EXP)


state 78

   39 EXP: EXP ADD TERM .
   42 TERM: TERM . MUL POWER
   43     | TERM . DIV POWER

    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    $default  reduce using rule 39 (EXP)


state 79

   43 TERM: TERM DIV POWER .

    $default  reduce using rule 43 (TERM)


state 80

   42 TERM: TERM MUL POWER .

    $default  reduce using rule 42 (TERM)


state 81

   45 POWER: FACTOR POW POWER .

    $default  reduce using rule 45 (POWER)


state 82

    6 BLOCK: LBRACE $@1 STMTS RBRACE . $@2

    $default  reduce using rule 5 ($@2)

    $@2  go to state 89


state 83

   28 ASSIGNMENT_FORLOOP: ID ASSIGN . LOGICAL_EXP

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 90
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 84

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON . LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 91
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 85

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN . LBRACE $@4 STMTS RBRACE

    LBRACE  shift, and go to state 92


state 86

    1 STMTS: STMTS . STMT
   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS . RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 93
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    BLOCK              go to state 18
    STMT               go to state 44
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 87

   16 CONST_DECLARATION: CONST PARAM_TYPE ID SEMICOLON .

    $default  reduce using rule 16 (CONST_DECLARATION)


state 88

   27 ASSIGNMENT: ID ASSIGN LOGICAL_EXP SEMICOLON .

    $default  reduce using rule 27 (ASSIGNMENT)


state 89

    6 BLOCK: LBRACE $@1 STMTS RBRACE $@2 .

    $default  reduce using rule 6 (BLOCK)


state 90

   28 ASSIGNMENT_FORLOOP: ID ASSIGN LOGICAL_EXP .

    $default  reduce using rule 28 (ASSIGNMENT_FORLOOP)


state 91

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP . SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    SEMICOLON  shift, and go to state 94


state 92

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE . $@4 STMTS RBRACE

    $default  reduce using rule 22 ($@4)

    $@4  go to state 95


state 93

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE . UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    UNTIL  shift, and go to state 96


state 94

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON . ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE

    ID  shift, and go to state 62

    ASSIGNMENT_FORLOOP  go to state 97


state 95

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    ERROR       shift, and go to state 12
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    STMTS              go to state 98
    BLOCK              go to state 18
    STMT               go to state 19
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 96

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL . LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON

    LPAREN  shift, and go to state 99


state 97

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP . RPAREN LBRACE $@3 STMTS RBRACE

    RPAREN  shift, and go to state 100


state 98

    1 STMTS: STMTS . STMT
   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 101
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    BLOCK              go to state 18
    STMT               go to state 44
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 99

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN . LOGICAL_EXP $@6 RPAREN SEMICOLON

    NOT      shift, and go to state 1
    LPAREN   shift, and go to state 2
    SUB      shift, and go to state 7
    INTEGER  shift, and go to state 13
    FLOAT    shift, and go to state 14
    CHAR     shift, and go to state 15
    ID       shift, and go to state 33

    LOGICAL_EXP  go to state 102
    REL_EXP      go to state 28
    EXP          go to state 29
    TERM         go to state 30
    POWER        go to state 31
    FACTOR       go to state 32


state 100

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN . LBRACE $@3 STMTS RBRACE

    LBRACE  shift, and go to state 103


state 101

   23 WHILE_LOOP: WHILE LPAREN LOGICAL_EXP RPAREN LBRACE $@4 STMTS RBRACE .

    $default  reduce using rule 23 (WHILE_LOOP)


state 102

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP . $@6 RPAREN SEMICOLON

    $default  reduce using rule 25 ($@6)

    $@6  go to state 104


state 103

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE . $@3 STMTS RBRACE

    $default  reduce using rule 20 ($@3)

    $@3  go to state 105


state 104

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 . RPAREN SEMICOLON

    RPAREN  shift, and go to state 106


state 105

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 . STMTS RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    ERROR       shift, and go to state 12
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    STMTS              go to state 107
    BLOCK              go to state 18
    STMT               go to state 19
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 106

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 108


state 107

    1 STMTS: STMTS . STMT
   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS . RBRACE

    NOT         shift, and go to state 1
    LPAREN      shift, and go to state 2
    LBRACE      shift, and go to state 3
    RBRACE      shift, and go to state 109
    FOR         shift, and go to state 4
    WHILE       shift, and go to state 5
    REPEAT      shift, and go to state 6
    SUB         shift, and go to state 7
    INT_TYPE    shift, and go to state 8
    FLOAT_TYPE  shift, and go to state 9
    CHAR_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11
    INTEGER     shift, and go to state 13
    FLOAT       shift, and go to state 14
    CHAR        shift, and go to state 15
    ID          shift, and go to state 16

    BLOCK              go to state 18
    STMT               go to state 44
    DECLARATION        go to state 20
    CONST_DECLARATION  go to state 21
    PARAM_TYPE         go to state 22
    FOR_LOOP           go to state 23
    WHILE_LOOP         go to state 24
    REPEAT_UNTIL_LOOP  go to state 25
    ASSIGNMENT         go to state 26
    LOGICAL_EXP        go to state 27
    REL_EXP            go to state 28
    EXP                go to state 29
    TERM               go to state 30
    POWER              go to state 31
    FACTOR             go to state 32


state 108

   26 REPEAT_UNTIL_LOOP: REPEAT LBRACE $@5 STMTS RBRACE UNTIL LPAREN LOGICAL_EXP $@6 RPAREN SEMICOLON .

    $default  reduce using rule 26 (REPEAT_UNTIL_LOOP)


state 109

   21 FOR_LOOP: FOR LPAREN ASSIGNMENT_FORLOOP SEMICOLON LOGICAL_EXP SEMICOLON ASSIGNMENT_FORLOOP RPAREN LBRACE $@3 STMTS RBRACE .

    $default  reduce using rule 21 (FOR_LOOP)
